{"version":3,"sources":["tree/components/NodeContainer.ts","tree/components/constants.tsx","tree/components/Common.ts","tree/components/Arrow.tsx","tree/components/Border.ts","tree/components/Bullet.tsx","tree/components/NodeText.ts","tree/components/NodeIcons.tsx","tree/components/VideoPreview.ts","utils/createId.ts","tree/treeValidation.ts","tree/treeOperations.ts","utils/arrayOperations.ts","tree/treeActions.ts","tree/dnd.tsx","tree/types.ts","tree/offsetHandler.ts","tree/sampleTrees.ts","player/index.tsx","keys.ts","youtube/api.ts","youtube/mapVideosToNodes.ts","tree/NodeTitle.tsx","tree/Node.tsx","tree/Tree.tsx","App.tsx","utils/useDebounce.ts","utils/shallowEqual.ts","serviceWorker.ts","index.tsx","tree/icons/folder-closed.svg","tree/icons/folder-opened-many.svg","tree/icons/folder-opened-single.svg","tree/icons/folder-opened-empty.svg"],"names":["NodeContainer","styled","div","_templateObject","props","level","Center","Common_templateObject","Arrow","react_default","a","createElement","ArrowContainer","onClick","ArrowIcon","data-testid","nodeId","orientation","Arrow_templateObject","getStyleForOrientation","_templateObject2","smallSide","toFixed","concat","width","Border","Border_templateObject","placement","dragLevel","Bullet","React","forwardRef","_ref","ref","node","CircleContainer","id","Img","src","getFolderIcon","alt","height","isHidden","FolderClosed","children","length","FolderOpenedMany","FolderOpenedSingle","FolderOpenedEmpty","img","Bullet_templateObject","Bullet_templateObject2","NodeText","span","NodeText_templateObject","NodeIcons","onEdit","onDelete","IconsContainer","NodeIcons_templateObject","VideoPreview","VideoPreview_templateObject","hasRoundImage","type","nodeType","createId","Math","random","validateParent","parentId","Error","updateNode","nodes","updated","Object","objectSpread","defineProperty","deleteNode","parent","getParentKey","items","item","filter","i","getRootKey","array","first","getNodePath","keys","find","key","indexOf","path","onSearchStart","isLoading","onSearchDone","newVideoNodes","map","n","withNodes","reduce","state","createNode","toggleVisibility","onDrop","itemBeingDragged","isDraggingFromDifferentScopes","newId","newPlacement","insertNode","copyNodeDeep","newNodeId","newNodes","newIds","index","undefined","nodeLevel","getNodeLevel","insertDragItemAtPlacement","context","action","targetIndex","copy","toConsumableArray","splice","DragContext","DragDropContext","HTML5Backend","react","TreeDragSource","DragSource","beginDrag","endDrag","monitor","didDrop","setPlacement","connect","connectDragSource","dragSource","Roots","TreeDropTarget","DropTarget","drop","setNodes","hover","component","getNode","rect","yPosition","hoverBoundingRect","getBoundingClientRect","clientOffset","getClientOffset","y","bottom","top","offsetWithoutArrow","max","x","floor","isFirst","maxDragLevel","desiredDragLevel","desiredPlacement","getItem","connectDropTarget","dropTarget","sampleNodes","video","label","playlistId","imageUrl","text","playlist","root","FAVORITES","SEARCH","videoUrl","rootType","YoutubePlayerWrapper","style","YouTube","assign","onReady","e","target","opts","playerVars","autoplay","position","right","Player","videoId","_useState","useState","_useState2","slicedToArray","setPlayer","player_YoutubePlayerWrapper","YOUTUBE_KEY","isItemSupported","itemKind","parseItem","kind","parseVideo","parsePlaylist","parseChannel","generalPart","channelId","title","snippet","previewUrl","thumbnails","default","url","logRequest","term","requestType","console","log","mapVideosToNodes","response","mapItem","getSpecific","getNodeType","NodeTitle","isEditing","setIsEditing","_useState3","_useState4","setText","endEdit","newText","onRenameNode","onDeleteNode","onBlur","autoFocus","onKeyPress","value","onChange","NodeIcons_NodeIcons","onPlay","elementRef","useRef","useImperativeHandle","current","onToggleCollapse","fetch","then","json","data","v","s","resourceId","Arrow_Arrow","tree_NodeTitle","validateChildren","forEach","hasChildren","Tree","ids","Node","LayoutManager","_ref2","renderRight","renderLeft","_useState7","_useState8","seachVisible","setSearchVisibility","flex","backgroundColor","flexDirection","display","alignItems","App_Search","isVisible","renderTree","Search","_ref3","_useState9","_useState10","setValue","throttledValue","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","justifyContent","paddingRight","App","processDefaultNodes","_useState5","_useState6","nodeBeingPlayed","setNodeBeingPlayer","updatePlacementOptimized","objA","objB","aKeys","bKeys","len","shallowEqual","count","addNewNodeForFavorites","withChild","onCreateNode","App_LayoutManager","tree_Tree","src_player","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.bdd5f831.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { LEVEL_SHIFT } from \"./constants\";\n\ninterface NodeContainerProps {\n  level: number;\n}\n\nexport const NodeContainer = styled.div<NodeContainerProps>`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  padding-left: ${(props: NodeContainerProps) => props.level * LEVEL_SHIFT}px;\n`;\n","export const ARROW_SIZE = 15;\n\nexport const LEVEL_SHIFT = 20;\n","import styled from \"styled-components\";\n\nexport const Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\nimport React, { MouseEventHandler } from \"react\";\nimport { ARROW_SIZE } from \"./constants\";\nimport { NodeContainer } from \"./NodeContainer\";\nimport { Center } from \"./Common\";\n\ntype ArrowIconOrientation = \"right\" | \"down\";\n\ninterface ArrowProps {\n  nodeId: string;\n  onClick: MouseEventHandler;\n  orientation: ArrowIconOrientation;\n}\n\nexport const Arrow = (props: ArrowProps) => (\n  <ArrowContainer onClick={props.onClick}>\n    <ArrowIcon\n      data-testid={\"arrow-\" + props.nodeId}\n      orientation={props.orientation}\n    />\n  </ArrowContainer>\n);\n\ninterface ArrowIconProps {\n  orientation: ArrowIconOrientation;\n}\n\nconst ArrowIcon = styled.div<ArrowIconProps>`\n  width: 0;\n  height: 0;\n  border-style: solid;\n  ${(props: ArrowIconProps) => getStyleForOrientation(props.orientation)};\n  visibility: hidden;\n  ${NodeContainer}:hover & {\n    visibility: visible;\n  }\n`;\n\nconst ArrowContainer = styled(Center)`\n  height: ${ARROW_SIZE}px;\n  width: ${ARROW_SIZE}px;\n  min-width: ${ARROW_SIZE}px;\n`;\n\nconst getStyleForOrientation = (orientation: ArrowIconOrientation) => {\n  const width = 8;\n  const side = width / 2;\n  const smallSide = (side * 1.73205).toFixed(1);\n  const color = \"rgb(75, 81, 85)\";\n  if (orientation === \"right\") {\n    return `\n    border-width: ${side}px 0 ${side}px ${smallSide}px;\n    border-color: transparent transparent transparent ${color};\n  `;\n  } else\n    return `  \n    border-width: ${smallSide}px ${side}px 0 ${side}px;\n    border-color: ${color} transparent transparent transparent;\n    `;\n};\n","import styled from \"styled-components\";\nimport { ARROW_SIZE, LEVEL_SHIFT } from \"./constants\";\n\nexport const Border = styled.div`\n  height: 2px;\n  background-color: grey;\n  position: absolute;\n  left: ${(props: any) =>\n    ARROW_SIZE + props.placement.dragLevel * LEVEL_SHIFT}px;\n  right: 0;\n  ${(props: any) =>\n    props.placement.orientation === \"AFTER\" ? \"bottom: -1px\" : \"top: -1px\"};\n` as any;\n","import styled from \"styled-components\";\nimport React, { Ref } from \"react\";\nimport { Node } from \"../types\";\nimport FolderClosed from \"../icons/folder-closed.svg\";\nimport FolderOpenedMany from \"../icons/folder-opened-many.svg\";\nimport FolderOpenedSingle from \"../icons/folder-opened-single.svg\";\nimport FolderOpenedEmpty from \"../icons/folder-opened-empty.svg\";\nimport { NodeContainer } from \"./NodeContainer\";\n\ninterface BulletProps {\n  node: Node;\n}\n\nconst FOLDER_SIZE = 25;\n\nexport const Bullet = React.forwardRef(\n  ({ node }: BulletProps, ref: Ref<HTMLDivElement>) => (\n    <CircleContainer ref={ref} data-testid={\"drag-handle-\" + node.id}>\n      <Img\n        src={getFolderIcon(node)}\n        alt=\"\"\n        width={FOLDER_SIZE}\n        height={FOLDER_SIZE}\n      />\n    </CircleContainer>\n  )\n);\n\nconst getFolderIcon = (node: Node) => {\n  if (node.isHidden) return FolderClosed;\n  const children = node.children;\n\n  if (!children) return FolderOpenedEmpty;\n\n  if (children.length > 1) return FolderOpenedMany;\n  else return FolderOpenedSingle;\n};\n\nconst Img = styled.img`\n  filter: invert(0.3);\n  ${NodeContainer}:hover & {\n    filter: invert(0);\n  }\n`;\n\nexport const CircleContainer = styled.div`\n  margin-right: 5px;\n`;\n","import styled from \"styled-components\";\n\nexport const NodeText = styled.span``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NodeContainer } from \"./NodeContainer\";\n\ninterface Props {\n  nodeId: string;\n  onEdit: () => void;\n  onDelete: () => void;\n}\n\nconst NodeIcons = ({ onEdit, onDelete, nodeId }: Props) => (\n  <IconsContainer>\n    <button data-testid={\"edit-\" + nodeId} onClick={onEdit}>\n      E\n    </button>\n    <button data-testid={\"delete-\" + nodeId} onClick={onDelete}>\n      X\n    </button>\n  </IconsContainer>\n);\n\nconst IconsContainer = styled.div`\n  visibility: hidden;\n  ${NodeContainer}:hover & {\n    visibility: visible;\n  }\n  padding-left: 10px;\n`;\n\nexport { NodeIcons };\n","import styled from \"styled-components\";\nimport { NodeType } from \"../types\";\n\ninterface Props {\n  type: NodeType;\n}\n\nexport const VideoPreview = styled.img<Props>`\n  height: 32px;\n  width: 32px;\n\n  max-width: 100%;\n\n  border-radius: ${(props: Props) => (hasRoundImage(props.type) ? 60 : 3)}px;\n\n  ${(props: Props) => (hasRoundImage(props.type) ? \"\" : \"height: auto\")};\n  margin-right: 5px;\n`;\n\nconst hasRoundImage = (nodeType: NodeType) =>\n  nodeType === \"Channel\" || nodeType === \"Playlist\";\n","export const createId = (): string => {\n  return Math.random() + \"\";\n};\n","export const validateParent = (\n  parentId: string | undefined,\n  nodeId: string\n): string => {\n  if (!parentId)\n    throw new Error(\n      \"Expected parent for node \" + nodeId + \", but not \" + parentId\n    );\n  return parentId;\n};\n","import { Node, Nodes } from \"./types\";\nimport { createId, contains, except, first } from \"../utils\";\nimport { validateParent } from \"./treeValidation\";\n\nexport const createNode = (nodes: Nodes, node: Node): Nodes => {\n  return { ...nodes, [node.id]: node };\n};\n\nexport const updateNode = (\n  nodes: Nodes,\n  id: string,\n  updated: (node: Node) => Partial<Node>\n): Nodes => {\n  return {\n    ...nodes,\n    [id]: {\n      ...nodes[id],\n      ...updated(nodes[id])\n    }\n  };\n};\n\nexport const deleteNode = (nodes: Nodes, nodeId: string) => {\n  const parent = validateParent(getParentKey(nodes, nodeId), nodeId);\n  const res  = updateNode(nodes, parent, node => ({\n    children: except(node.children, nodeId)\n  }));\n  return res;\n};\n\nexport const getNodeLevel = (nodes: Nodes, nodeId: string) =>\n  getNodePath(nodes, nodeId).length - 2;\n\nexport const getRootKey = (nodes: Nodes, nodeId: string): string =>\n  first(getNodePath(nodes, nodeId));\n\nexport const getParentKey = (\n  nodes: Nodes,\n  nodeId: string\n): string | undefined =>\n  Object.keys(nodes).find(key => contains(nodes[key].children, nodeId));\n\nconst getNodePath = (nodes: Nodes, nodeId: string) => {\n  let path = [nodeId];\n  let parent = getParentKey(nodes, nodeId);\n  while (parent) {\n    path = [parent].concat(path);\n    parent = getParentKey(nodes, parent);\n  }\n  return path;\n};\n\n//TODO: ugly code, consider to refactor it\nexport const copyNodeDeep = (\n  nodes: Nodes,\n  nodeId: string,\n  newNodeId: string\n): Nodes => {\n  let newNodes;\n  const children = nodes[nodeId].children;\n  if (children) {\n    const newIds = children.map(() => createId());\n\n    newNodes = newIds.reduce((state, newId, index) => {\n      return copyNodeDeep(state, children[index], newId);\n    }, nodes);\n    newNodes = updateNode(newNodes, newNodeId, node => ({\n      ...node,\n      children: newIds\n    }));\n  } else {\n    newNodes = nodes;\n  }\n  return {\n    ...newNodes,\n    [newNodeId]: {\n      ...newNodes[nodeId],\n      children: newNodes[newNodeId] ? newNodes[newNodeId].children : undefined,\n      id: newNodeId\n    }\n  };\n};\n","export function contains<T>(array: T[] | undefined, item: T): boolean {\n  return !!array && array.indexOf(item) >= 0;\n}\n\nexport function first<T>(array: T[]): T {\n  if (!array || array.length === 0)\n    throw new Error(\"Expected a non-empty array \" + array);\n  return array[0];\n}\n\nexport function except<T>(items: T[] | undefined, item: T): T[] {\n  if (!items) return [];\n  return items.filter(i => i !== item);\n}\n\n","import {Node, Nodes, NodeType, Placement} from \"./types\";\nimport {\n  copyNodeDeep,\n  createNode,\n  deleteNode,\n  getNodeLevel,\n  getParentKey,\n  getRootKey,\n  updateNode\n} from \"./treeOperations\";\nimport {createId} from \"../utils\";\nimport {validateParent} from \"./treeValidation\";\n\nexport const onCreateNode = (nodes: Nodes, parentId: string) => {\n  const id = Math.random() + \"\";\n  const node: Node = {\n    text: \"New Node\",\n    type: 'Composite',\n    id\n  };\n  const withChild = updateNode(nodes, parentId, node => ({\n    children: (node.children as string[]).concat([id])\n  }));\n  return {\n    ...withChild,\n    [id]: node\n  };\n};\n\nexport const onDeleteNode = (nodes: Nodes, nodeId: string) =>\n  deleteNode(nodes, nodeId);\n\nexport const onRenameNode = (nodes: Nodes, nodeId: string, newText: string) =>\n  updateNode(nodes, nodeId, () => ({\n    text: newText\n  }));\n\nexport const onSearchStart = (nodes: Nodes, nodeId: string) =>\n  updateNode(nodes, nodeId, () => ({\n    isLoading: true\n  }));\n\nexport const onSearchDone = (\n  nodes: Nodes,\n  parentId: string,\n  newVideoNodes: Node[]\n): Nodes => {\n  const children = newVideoNodes.map(n => n.id);\n  const withNodes = newVideoNodes.reduce(\n    (state, node) => createNode(state, node),\n    nodes\n  );\n\n  return updateNode(withNodes, parentId, () => ({\n    children,\n    isLoading: false,\n    isHidden: false\n  }));\n};\n\nexport const toggleVisibility = (nodes: Nodes, nodeId: string) =>\n  updateNode(nodes, nodeId, node => ({\n    isHidden: !node.isHidden\n  }));\n\nexport const onDrop = (nodes: Nodes, placement: Placement): Nodes => {\n  if (placement.itemBeingDragged === placement.id) return nodes;\n  if (isDraggingFromDifferentScopes(nodes, placement)) {\n    const newId = createId();\n    const newPlacement = {\n      ...placement,\n      itemBeingDragged: newId\n    };\n    return insertNode(\n      copyNodeDeep(nodes, placement.itemBeingDragged, newId),\n      newPlacement\n    );\n  }\n  return insertNode(deleteNode(nodes, placement.itemBeingDragged), placement);\n};\n\nconst insertNode = (nodes: Nodes, placement: Placement): Nodes => {\n  if (placement.dragLevel !== 0) {\n    const nodeLevel = getNodeLevel(nodes, placement.id);\n    if (placement.dragLevel > nodeLevel) {\n      return updateNode(nodes, placement.id, node => ({\n        children: [placement.itemBeingDragged].concat(node.children || [])\n      }));\n    }\n  }\n\n  const parent = validateParent(\n    getParentKey(nodes, placement.id),\n    placement.id\n  );\n  return updateNode(nodes, parent, node => ({\n    children: insertDragItemAtPlacement(node.children as string[], placement)\n  }));\n};\n\nconst isDraggingFromDifferentScopes = (nodes: Nodes, placement: Placement) =>\n  getRootKey(nodes, placement.id) !==\n  getRootKey(nodes, placement.itemBeingDragged);\n\nexport function insertDragItemAtPlacement(\n  context: string[],\n  action: Placement\n): string[] {\n  let index = context.indexOf(action.id);\n  const targetIndex = action.orientation === \"AFTER\" ? index + 1 : index;\n  const copy = [...context];\n  copy.splice(targetIndex, 0, action.itemBeingDragged);\n  return copy;\n}\n","import React, { Fragment } from \"react\";\nimport { DragDropContext, DragSource, DropTarget } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { Placement, PlacementOrientation } from \"./types\";\nimport { getBoundingClientRect, getClientOffset } from \"./offsetHandler\";\nimport {ARROW_SIZE, LEVEL_SHIFT} from \"./components\";\nimport { NodeProps } from \"./Node\";\nimport {getParentKey,} from \"./treeOperations\";\nimport {validateParent} from \"./treeValidation\";\nimport {onDrop} from \"./treeActions\";\n\nconst Context = ({ children }: { children: JSX.Element }) => (\n  <Fragment>{children}</Fragment>\n);\n\nexport const DragContext = DragDropContext(HTML5Backend)(Context);\n\nexport const TreeDragSource = DragSource(\n  \"NODE\",\n  {\n    beginDrag: (props: NodeProps) => {\n      return {\n        id: props.node.id\n      };\n    },\n    endDrag: (props: NodeProps, monitor: any) => {\n      const didDrop = monitor.didDrop();\n      if (!didDrop) {\n        props.setPlacement({\n          id: \"\"\n        });\n      }\n    }\n  },\n  connect => ({\n    connectDragSource: connect.dragSource()\n  })\n);\n\nfunction getVerticalPlacement(\n  rect: DOMRectReadOnly,\n  yPosition: number\n): PlacementOrientation {\n  const middlePoint = (rect.bottom + rect.top) / 2;\n  return middlePoint >= yPosition ? \"BEFORE\" : \"AFTER\";\n}\n\nexport const TreeDropTarget = DropTarget(\n  \"NODE\",\n  {\n    drop(props: NodeProps) {\n      props.setNodes(onDrop(props.nodes, props.placement));\n      props.setPlacement({\n        id: \"\"\n      });\n    },\n    hover(props: NodeProps, monitor: any, component: any) {\n      if (!component) {\n        return null;\n      }\n      const node = component.getNode();\n      if (!node) {\n        return null;\n      }\n\n      const hoverBoundingRect = getBoundingClientRect(node);\n      const clientOffset = getClientOffset(monitor);\n\n      const placement = getVerticalPlacement(hoverBoundingRect, clientOffset.y);\n\n      const offsetWithoutArrow = Math.max(\n        clientOffset.x - ARROW_SIZE - hoverBoundingRect.x,\n        0\n      );\n\n      const dragLevel = Math.floor(offsetWithoutArrow / LEVEL_SHIFT);\n\n      const parent = validateParent(getParentKey(props.nodes, props.node.id), props.node.id);\n      const context = props.nodes[parent].children || [];\n      const isFirst = context.indexOf(props.node.id) === 0;\n\n      const maxDragLevel =\n        placement === \"BEFORE\" && isFirst ? props.level : props.level + 1;\n\n      const desiredDragLevel =\n        dragLevel > maxDragLevel ? maxDragLevel : dragLevel;\n\n      const desiredPlacement: Placement = {\n        itemBeingDragged: monitor.getItem().id,\n        id: props.node.id,\n        orientation: placement,\n        dragLevel: desiredDragLevel\n      };\n      props.setPlacement(desiredPlacement);\n    }\n  },\n  connect => ({\n    connectDropTarget: connect.dropTarget()\n  })\n);\n","export type NodeType = \"Video\" | \"Playlist\" | \"Channel\" | \"Root\" | \"Composite\";\n\nexport interface Node {\n  id: string;\n  text: string;\n  children?: string[];\n  isHidden?: boolean;\n  isLoading?: boolean;\n\n  type: NodeType;\n  videoUrl?: string;\n  channelId?: string;\n  playlistId?: string;\n  imageUrl?: string;\n}\n\nexport interface Nodes {\n  [id: string]: Node;\n}\n\nexport type PlacementOrientation = \"BEFORE\" | \"AFTER\";\n\nexport type Placement = {\n  id: string;\n  orientation: PlacementOrientation;\n  dragLevel: number;\n  itemBeingDragged: string;\n};\n\nexport enum Roots {\n  FAVORITES = \"ROOT.favorites\",\n  SEARCH = \"ROOT.search\"\n}\n","//used to stub dependencies over the sizes of the dom elements\n\nexport const getClientOffset = (monitor: any) => monitor.getClientOffset();\n\nexport const getBoundingClientRect = (node: any) =>\n  node.getBoundingClientRect();\n","import {Node, Nodes, NodeType, Roots} from \"./types\";\n\nconst sampleNodes: Nodes = {\n  ...node(\"1\", [\"1.1\", \"1.2\"]),\n  ...node(\"1.1\"),\n  ...node(\"1.2\", [\"1.2.1\"]),\n  ...node(\"1.2.1\"),\n  ...node(\"2\", [\"2.1\"]),\n  ...node(\"2.1\", [\"2.1.1\"]),\n  ...node(\"2.1.1\"),\n  ...node(\"Ambient\", [\n    \"Carbon Based Lifeforms Album 1\",\n    \"Carbon Based Lifeforms Album 2\"\n  ]),\n  ...video(\n    \"Carbon Based Lifeforms Album 1\",\n    \"f5ddAAYasgM\",\n    \"https://picsum.photos/id/190/132/132?grayscale\"\n  ),\n  ...video(\n    \"Carbon Based Lifeforms Album 2\",\n    \"KQE29az48gM\",\n    \"https://picsum.photos/id/191/132/132?grayscale\"\n  ),\n  ...playlist('MyPlaylist', 'MyPlaylistId', 'https://picsum.photos/id/192/132/132?grayscale'),\n  ...root([\"1\", \"2\"], Roots.FAVORITES),\n  ...root(['Ambient'], Roots.SEARCH)\n};\n\nexport { sampleNodes };\n\nexport function node(id: string, children?: string[]) {\n  const node: Node = {\n    id,\n    text: \"Node \" + id,\n    children,\n    type: 'Composite'\n  };\n  return {\n    [id]: node\n  };\n}\n\nfunction video(label: string, videoUrl: string, imageUrl: string) {\n  const node: Node = {\n    id: label,\n    text: label,\n    type: 'Video',\n    imageUrl,\n    videoUrl\n  };\n  return {\n    [label]: node\n  };\n}\n\n\nfunction playlist(label: string, playlistId: string, imageUrl: string) {\n  const node: Node = {\n    id: label,\n    text: label,\n    type: 'Playlist',\n    imageUrl,\n    playlistId,\n  };\n  return {\n    [label]: node\n  };\n}\n\nexport function root(nodes: string[], rootType: Roots) {\n  const node: Node = {\n    id: rootType,\n    text: rootType,\n    children: nodes,\n    type: 'Root'\n  };\n  return {\n    [rootType]: node\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport Youtube from \"react-youtube\";\n\ninterface Props {\n  videoId?: string;\n}\n\nconst Player = ({ videoId }: Props) => {\n  const [player, setPlayer] = useState();\n\n  // useEffect(() => {\n  //   if (player) {\n  //     console.log(\"playing video\");\n  //     player.playVideo();\n  //   }\n  // }, [player]);\n\n  if (!videoId) return null;\n\n  return <YoutubePlayerWrapper onReady={setPlayer} videoId={videoId} />;\n};\n\nconst YoutubePlayerWrapper = (props: any) => (\n  <div style={style}>\n    <Youtube\n      {...props}\n      onReady={e => props.onReady(e.target)}\n      data-testid=\"player\"\n      opts={{\n        height: \"150\",\n        width: \"220\",\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1\n        }\n      }}\n    />\n  </div>\n);\n\nconst style = {\n  position: \"absolute\",\n  right: 15,\n  bottom: 15\n} as {};\n\nexport default Player;\n","export const YOUTUBE_KEY = 'AIzaSyBsCL-zrXWd9S2FKRSDVfz7dOo783LQkLk';\n\n\n\n// Get playlists for Channel\n// https://www.googleapis.com/youtube/v3/playlists?part=snippet%2CcontentDetails&channelId=UC_x5XG1OV2P6uZZ5FSM9Ttw&maxResults=25&key=AIzaSyBsCL-zrXWd9S2FKRSDVfz7dOo783LQkLk\n\n\n// Get videos for Channel\n// https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=UC_x5XG1OV2P6uZZ5FSM9Ttw&maxResults=20&order=date&type=video&key=AIzaSyBsCL-zrXWd9S2FKRSDVfz7dOo783LQkLk\n","import {\n  ItemKind,\n  ItemsItem,\n  YoutubeSearchResponse\n} from \"./types/youtubeSearchResponse\";\nimport { YOUTUBE_KEY } from \"../keys\";\nimport { IS_REAL_API } from \"../featureToggles\";\nimport { searchFaked } from \"./types/fakedResponses\";\nimport { SimilarResponse } from \"./types/similarResponse\";\nimport { PlaylistVideosResponse } from \"./types/PlaylistVideosResponse\";\n\nexport type ItemType = \"Video\" | \"Channel\" | \"Playlist\";\n\ninterface Item {\n  title: string;\n  previewUrl: string;\n}\n\ninterface VideoItem extends Item {\n  type: \"Video\";\n  videoId: string;\n}\n\ninterface ChannelItem extends Item {\n  type: \"Channel\";\n  channelId: string;\n}\n\ninterface PlaylistItem extends Item {\n  type: \"Playlist\";\n  playlistId: string;\n}\n\nexport type SearchItem = VideoItem | ChannelItem | PlaylistItem;\n\nexport interface SearchResponse {\n  items: SearchItem[];\n}\n\nexport const searchVideos = (term: string): Promise<SearchResponse> =>\n  IS_REAL_API\n    ? fetch(\n        `https://www.googleapis.com/youtube/v3/search?part=snippet&shart=mostPopular&maxResults=10&key=${YOUTUBE_KEY}&q=` +\n          logRequest(term, \"search\")\n      )\n        .then(response => response.json())\n        .then((data: YoutubeSearchResponse) => ({\n          items: data.items\n            .filter(item => isItemSupported(item.id.kind))\n            .map(parseItem)\n        }))\n    : Promise.resolve(searchFaked(term));\n\nexport const searchSimilar = (videoId: string): Promise<SearchResponse> =>\n  fetch(\n    `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&key=${YOUTUBE_KEY}&relatedToVideoId=` +\n      logRequest(videoId, \"search similar\")\n  )\n    .then(response => response.json())\n    .then((data: SimilarResponse) => ({\n      items: data.items\n        .filter(v => v.id.videoId)\n        .map(s => ({\n          title: s.snippet.title,\n          type: \"Video\",\n          videoId: s.id.videoId,\n          previewUrl: s.snippet.thumbnails.default.url\n        }))\n    }));\n\nexport const getPlaylistVideos = (\n  playlistId: string\n): Promise<SearchResponse> => {\n  logRequest(playlistId, \"playlistItems\");\n  if (IS_REAL_API) {\n    return fetch(\n      `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=${playlistId}&key=${YOUTUBE_KEY}&maxResults=20`\n    )\n      .then(response => response.json())\n      .then((data: PlaylistVideosResponse) => ({\n        items: data.items.map(response => ({\n          title: response.snippet.title,\n          type: \"Video\",\n          videoId: response.snippet.resourceId.videoId,\n          previewUrl: response.snippet.thumbnails.default.url\n        }))\n      }));\n  }\n  throw new Error(\"Faked playlistItems is not supported yet\");\n};\n\nconst isItemSupported = (itemKind: ItemKind): boolean =>\n  itemKind === \"youtube#video\" ||\n  itemKind === \"youtube#playlist\" ||\n  itemKind === \"youtube#channel\";\n\nconst parseItem = (item: ItemsItem): SearchItem => {\n  if (item.id.kind === \"youtube#video\") return parseVideo(item);\n  else if (item.id.kind === \"youtube#playlist\") return parsePlaylist(item);\n  else return parseChannel(item);\n};\n\nconst parseVideo = (item: ItemsItem): SearchItem => ({\n  ...generalPart(item),\n  videoId: item.id.videoId as string,\n  type: \"Video\"\n});\n\nconst parsePlaylist = (item: ItemsItem): SearchItem => ({\n  ...generalPart(item),\n  playlistId: item.id.playlistId as string,\n  type: \"Playlist\"\n});\n\nconst parseChannel = (item: ItemsItem): SearchItem => ({\n  ...generalPart(item),\n  channelId: item.id.channelId as string,\n  type: \"Channel\"\n});\n\nconst generalPart = (item: ItemsItem) => ({\n  title: item.snippet.title,\n  previewUrl: item.snippet.thumbnails.default.url\n});\n\nconst logRequest = (term: string, requestType: string) => {\n  console.log(`Requesting Youtube ${requestType} for ${term}`);\n  return term;\n};\n","import { ItemType, SearchItem, SearchResponse } from \"./api\";\nimport { Node, NodeType } from \"../tree/types\";\nimport { createId } from \"../utils\";\n\nexport const mapVideosToNodes = (response: SearchResponse): Node[] => {\n  return response.items.map(mapItem);\n};\n\nconst mapItem = (item: SearchItem): Node => {\n  return {\n    id: createId(),\n    text: item.title,\n    ...getSpecific(item),\n    imageUrl: item.previewUrl,\n    isHidden: true\n  };\n};\n\nconst getSpecific = (item: SearchItem) => ({\n  type: getNodeType(item.type),\n  videoUrl: (item as any).videoId,\n  channelId: (item as any).channelId,\n  playlistId: (item as any).playlistId\n});\n\n//TODO: Consider not using enums but just simple strings\nconst getNodeType = (type: ItemType): NodeType =>\n  type === \"Video\" ? \"Video\" : type === \"Playlist\" ? \"Playlist\" : \"Channel\";\n","import { Node, Nodes } from \"./types\";\nimport React, { KeyboardEvent, useState, Fragment } from \"react\";\nimport { NodeIcons, NodeText } from \"./components\";\nimport {onDeleteNode, onRenameNode} from \"./treeActions\";\n\ninterface Props {\n  node: Node;\n  nodes: Nodes;\n  setNodes: (nodes: Nodes) => void;\n}\n\nconst NodeTitle = ({ nodes, node, setNodes }: Props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [text, setText] = useState();\n\n  const onEdit = () => {\n    setText(node.text);\n    setIsEditing(true);\n  };\n\n  const onKey = (e: KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      endEdit();\n    }\n  };\n\n  const endEdit = () => {\n    setNodes(onRenameNode(nodes, node.id, text));\n    setIsEditing(false);\n  };\n\n  const onDelete = (nodeId: string) =>\n    setNodes(onDeleteNode(nodes, nodeId));\n\n  return (\n    <Fragment>\n      {isEditing ? (\n        <input\n          data-testid={\"input-\" + node.id}\n          onBlur={endEdit}\n          autoFocus\n          onKeyPress={onKey}\n          type=\"text\"\n          value={text}\n          onChange={e => setText(e.target.value)}\n        />\n      ) : (\n        <Fragment>\n          <NodeText data-testid={\"title-\" + node.id}>{node.text}</NodeText>\n          {node.isLoading && (\n            <span data-testid={\"loading-\" + node.id}>Loading...</span>\n          )}\n        </Fragment>\n      )}\n      <NodeIcons\n        nodeId={node.id}\n        onEdit={onEdit}\n        onDelete={() => onDelete(node.id)}\n      />\n    </Fragment>\n  );\n};\n\nexport default NodeTitle;\n","import React, { Ref, useImperativeHandle, useRef } from \"react\";\nimport { Node, Nodes, Placement } from \"./types\";\nimport {\n  Arrow,\n  Border,\n  Bullet,\n  NodeContainer,\n  VideoPreview\n} from \"./components\";\nimport { TreeDragSource, TreeDropTarget } from \"./dnd\";\nimport NodeTitle from \"./NodeTitle\";\nimport { TreeProps } from \"./Tree\";\nimport { onSearchDone, onSearchStart, toggleVisibility } from \"./treeActions\";\nimport { searchSimilar, getPlaylistVideos } from \"../youtube/api\";\nimport { mapVideosToNodes } from \"../youtube/mapVideosToNodes\";\n\nexport interface NodeProps extends TreeProps {\n  children: JSX.Element;\n  level: number;\n  node: Node;\n  setNodes: (nodes: Nodes) => void;\n  placement: Placement;\n  setPlacement: (placement: Partial<Placement>) => void;\n  onPlay: (nodeId: Node) => void;\n  connectDragSource: any;\n  connectDropTarget: any;\n}\nconst l = (e:any) => {\n  console.log(e);\n  return e;\n}\n\nconst NodeElement = React.forwardRef(\n  (\n    {\n      children,\n      node,\n      level,\n      connectDragSource,\n      connectDropTarget,\n      placement,\n      onPlay,\n      setNodes,\n      nodes\n    }: NodeProps,\n    ref: Ref<HTMLDivElement>\n  ) => {\n    const elementRef = useRef<HTMLDivElement>(null);\n\n    // @ts-ignore\n    useImperativeHandle(ref, () => {\n      connectDropTarget(elementRef);\n      return {\n        getNode: () => elementRef.current\n      };\n    });\n\n    const onToggleCollapse = (id: string) => {\n      const children = nodes[id].children;\n      if (children && children.length > 0) {\n        setNodes(toggleVisibility(nodes, id));\n      } else if (nodes[id].type === \"Video\") {\n        setNodes(onSearchStart(nodes, id));\n        searchSimilar(nodes[id].videoUrl as string).then(response => {\n          setNodes(onSearchDone(nodes, id, l(mapVideosToNodes(response))));\n        });\n      } else if (nodes[id].type === \"Playlist\") {\n        setNodes(onSearchStart(nodes, id));\n        getPlaylistVideos(nodes[id].playlistId as string).then(response =>\n          setNodes(onSearchDone(nodes, id, mapVideosToNodes(response)))\n        );\n      } else {\n        setNodes(toggleVisibility(nodes, id));\n      }\n    };\n\n    return (\n      <div>\n        <NodeContainer\n          data-testid={\"node-\" + node.id}\n          level={level}\n          ref={elementRef}\n        >\n          <Arrow\n            orientation={node.isHidden ? \"right\" : \"down\"}\n            nodeId={node.id}\n            onClick={() => onToggleCollapse(node.id)}\n          />\n          {node.type !== \"Composite\" ? (\n            <VideoPreview\n              type={node.type}\n              alt=\"Cover image\"\n              onClick={() => onPlay(node)}\n              ref={connectDragSource}\n              src={node.imageUrl}\n              data-testid={`video-image-${node.id}`}\n            />\n          ) : (\n            <Bullet node={node} ref={connectDragSource} />\n          )}\n          <NodeTitle setNodes={setNodes} nodes={nodes} node={node} />\n          {node.id === placement.id && (\n            <Border\n              placement={placement}\n              level={level}\n              data-testid={\"border-\" + node.id}\n            />\n          )}\n        </NodeContainer>\n        {children}\n      </div>\n    );\n  }\n);\n\nexport default TreeDropTarget(TreeDragSource(NodeElement));\n","import React, { Fragment } from \"react\";\nimport { Node, Nodes, Placement } from \"./types\";\nimport NodeElement from \"./Node\";\nimport {getParentKey} from \"./treeOperations\";\n\nexport interface TreeProps {\n  ids: string[];\n  level: number;\n  nodes: Nodes;\n  setNodes: (nodes: Nodes) => void;\n  placement: Partial<Placement>;\n  setPlacement: (placement: Partial<Placement>) => void;\n  onPlay: (node: Node) => void;\n}\n\nconst Tree = (props: TreeProps) => {\n  const { nodes, ids, level } = props;\n  validateChildren(nodes, ids);\n  return (\n    <Fragment>\n      {ids.map(id => (\n        <NodeElement {...props} key={id} node={nodes[id]} level={level}>\n          {hasChildren(nodes[id]) && (\n            <Tree\n              {...props}\n              ids={nodes[id].children as string[]}\n              level={level + 1}\n            />\n          )}\n        </NodeElement>\n      ))}\n    </Fragment>\n  );\n};\n\n//check that all node children can be found in the Nodes tree\nconst validateChildren = (nodes: Nodes, children: string[]) => {\n  children.forEach(node => {\n    if (!nodes[node]) {\n      const parent = getParentKey(nodes, node);\n      throw new Error(\n        `Node '${parent}' contains a non-existing child '${node}'. Check children of '${parent}'`\n      );\n    }\n  });\n};\n\nconst hasChildren = (node: Node) => node.children && !node.isHidden;\n\nexport default Tree;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { DragContext } from \"./tree/dnd\";\nimport { sampleNodes } from \"./tree/sampleTrees\";\nimport { Node, Nodes, Placement, Roots } from \"./tree/types\";\nimport Player from \"./player\";\nimport {\n  searchVideos,\n  SearchResponse\n} from \"./youtube/api\";\nimport { shallowEqual, useDebounce } from \"./utils\";\nimport {\n  onCreateNode,\n  onSearchDone,\n} from \"./tree/treeActions\";\nimport { mapVideosToNodes } from \"./youtube/mapVideosToNodes\";\nimport Tree from \"./tree/Tree\";\n\ninterface Props {\n  processDefaultNodes?: (nodes: Nodes) => Nodes;\n}\n\n\nconst l = (e:any) => {\n  console.log(e);\n  return e;\n}\n\n\nconst App: React.FC<Props> = ({ processDefaultNodes }) => {\n  const [nodes, setNodes] = useState(\n    processDefaultNodes ? processDefaultNodes(sampleNodes) : sampleNodes\n  );\n  const [placement, setPlacement] = useState({} as Partial<Placement>);\n\n  const [nodeBeingPlayed, setNodeBeingPlayer] = useState({} as Node);\n\n  const onPlay = (node: Node) => setNodeBeingPlayer(node);\n\n  const setSearchNodes = (response: SearchResponse) => {\n    setNodes(onSearchDone(nodes, Roots.SEARCH, l(mapVideosToNodes(response))));\n  };\n\n  const updatePlacementOptimized = (newPlacement: Partial<Placement>) => {\n    if (!shallowEqual(newPlacement, placement)) {\n      console.count(\"called set placement\");\n      setPlacement(newPlacement);\n    }\n  };\n\n  const addNewNodeForFavorites = () =>\n    setNodes(onCreateNode(nodes, Roots.FAVORITES));\n\n  return (\n    <div>\n      <DragContext>\n        <LayoutManager\n          onSearchDone={setSearchNodes}\n          renderRight={() => (\n            <Fragment>\n              <Tree\n                nodes={nodes}\n                ids={nodes[Roots.FAVORITES].children as string[]}\n                level={0}\n                setPlacement={updatePlacementOptimized}\n                setNodes={setNodes}\n                onPlay={onPlay}\n                placement={placement}\n              />\n              <button\n                data-testid=\"add-new-node\"\n                onClick={addNewNodeForFavorites}\n              >\n                add\n              </button>\n            </Fragment>\n          )}\n          renderLeft={() => (\n            <Tree\n              nodes={nodes}\n              ids={nodes[Roots.SEARCH].children as string[]}\n              level={0}\n              onPlay={onPlay}\n              setPlacement={updatePlacementOptimized}\n              setNodes={setNodes}\n              placement={placement}\n            />\n          )}\n        />\n      </DragContext>\n      <Player videoId={nodeBeingPlayed.videoUrl} />\n    </div>\n  );\n};\n\nconst LayoutManager = ({ renderRight, renderLeft, onSearchDone }: any) => {\n  const [seachVisible, setSearchVisibility] = useState(false);\n  const style = seachVisible\n    ? { flex: 1 }\n    : { width: 40, backgroundColor: \"lightGrey\" };\n  return (\n    <div\n      style={{\n        flexDirection: \"row\",\n        display: \"flex\",\n        alignItems: \"stretch\",\n        height: \"100vh\"\n      }}\n    >\n      <div style={style} data-testid=\"search-zone\">\n        <Search\n          isVisible={seachVisible}\n          onSearchDone={onSearchDone}\n          onClick={() => setSearchVisibility(!seachVisible)}\n          renderTree={renderLeft}\n        />\n      </div>\n\n      <div style={{ flex: 1 }} data-testid=\"favorites-zone\">\n        {renderRight()}\n      </div>\n    </div>\n  );\n};\n\nconst Search = ({ isVisible, onClick, renderTree, onSearchDone }: any) => {\n  const [value, setValue] = useState(\"\");\n  const throttledValue = useDebounce(value, 500);\n  useEffect(() => {\n    if (throttledValue) searchVideos(throttledValue).then(onSearchDone);\n  }, [throttledValue]);\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: isVisible ? \"flex-end\" : \"center\",\n          paddingRight: isVisible ? 20 : 0\n        }}\n      >\n        <button data-testid=\"toggle-sidebar\" onClick={onClick}>\n          {isVisible ? \"<\" : \"+\"}\n        </button>\n      </div>\n      {isVisible && (\n        <input\n          data-testid=\"search-input\"\n          type=\"text\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n      )}\n      {isVisible && renderTree()}\n    </div>\n  );\n};\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport function useDebounce(value: any, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","export function shallowEqual(objA: any, objB: any) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/folder-closed.5f8d5aa0.svg\";","module.exports = __webpack_public_path__ + \"static/media/folder-opened-many.f8af0c07.svg\";","module.exports = __webpack_public_path__ + \"static/media/folder-opened-single.cfca5246.svg\";","module.exports = __webpack_public_path__ + \"static/media/folder-opened-empty.feffd839.svg\";"],"sourceRoot":""}