{"version":3,"sources":["tree/rules.ts","tree/nodes.ts","tree/DragSource.js","tree/components/components.js","tree/constants.js","tree/DropTarget.js","tree/Node.js","tree/DragDropContext.js","tree/Tree.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["getParentKey","nodes","nodeId","Object","keys","find","key","array","children","item","indexOf","DragSource","beginDrag","props","id","endDrag","monitor","didDrop","setPlacement","connect","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","AddNewNodeItem","styled","div","_templateObject","itemHeight","plusHeight","Highlighted","_templateObject2","relativeShift","highlightPlacement","concat","Bullet","_templateObject3","ChildrenSpace","_templateObject4","highlighHeight","halfCircle","NodeContainer","_templateObject5","itemMargin","NodeHeader","_templateObject6","DropTarget","drop","hover","component","node","getNode","rect","yPosition","hoverBoundingRect","getBoundingClientRect","clientOffset","getClientOffset","placement","y","bottom","top","diff","getSourceClientOffset","x","placementLevel","Math","floor","itemBeingDragged","getItem","level","connectDropTarget","dropTarget","isOver","Node","React","forwardRef","_ref","ref","text","style","elementRef","useRef","useImperativeHandle","current","react_default","a","createElement","displayName","DragDropContext","HTML5Backend","react","Tree","tree","_useState","useState","_useState2","slicedToArray","Tree_TreeUI","1","2","3","4","5","6","7","roots","newPlacement","converted","parent","isFirst","objectSpread","convertPlacement","b","areEqualShallow","TreeUI","_ref2","_ref2$level","map","tree_Node","assign","getPlacementProps","Boolean","window","location","hostname","match","ReactDOM","render","filter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e36381d3.chunk.js","sourcesContent":["import { Nodes, Placement } from \"./types\";\n\nexport const canDragOver = (nodes: Nodes, placement: Placement) => {\n  return true;\n};\n\nexport const convertPlacement = (\n  nodes: Nodes,\n  placement: Placement\n): Placement => {\n  if (placement.relativeShift >= 1) {\n    const parent = getParentKey(nodes, placement.id);\n    let isFirst = false;\n    if (parent) {\n      const children = nodes[parent].children;\n      if (children) {\n        isFirst = children[0] === placement.id;\n      }\n    }\n    return {\n      ...placement,\n      relativeShift:\n        placement.highlightPlacement === \"PLACE_BEFORE\" && isFirst ? 0 : 1\n    };\n  }\n\n  //TODO: handle when placing an items before with previous item having a very deep nesting area\n  //TODO: handle case when item is being place inside itself\n  return placement;\n};\n\nexport const findRoots = (nodes: Nodes): string[] =>\n  Object.keys(nodes).filter(id => !getParentKey(nodes, id));\n\nexport const getParentKey = (\n  nodes: Nodes,\n  nodeId: string\n): string | undefined =>\n  Object.keys(nodes).find(key => contains(nodes[key].children, nodeId));\n\n//Array utils\nfunction contains<T>(array: T[] | undefined, item: T): boolean {\n  return !!array && array.indexOf(item) >= 0;\n}\n\nexport function areEqualShallow(a: any, b: any) {\n  for (var key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { Nodes } from \"./types\";\n\nexport const createTwoFlatNodes = (): Nodes => ({\n  \"1\": {\n    id: \"1\",\n    text: \"Item 1\"\n  },\n  \"2\": {\n    id: \"2\",\n    text: \"Item 2\"\n  }\n});\n\nexport const createInitialNodes = (): Nodes => ({\n  \"1\": {\n    id: \"1\",\n    text: \"Item 1\",\n    children: [\"2\", \"3\", \"5\"]\n  },\n  \"2\": {\n    id: \"2\",\n    text: \"Item 1.1\"\n  },\n  \"3\": {\n    id: \"3\",\n    text: \"Item 1.2\",\n    children: [\"4\"]\n  },\n  \"4\": {\n    id: \"4\",\n    text: \"Item 1.2.1\"\n  },\n  \"5\": {\n    id: \"5\",\n    text: \"Item 1.3\"\n  },\n  \"6\": {\n    id: \"6\",\n    text: \"Item 2\"\n  },\n  \"7\": {\n    id: \"7\",\n    text: \"Item 3\"\n  }\n});\n","import { DragSource } from \"react-dnd\";\n\nexport default DragSource(\n  \"CARD\",\n  {\n    beginDrag: props => ({\n      id: props.id\n    }),\n    endDrag: (props, monitor) => {\n      const didDrop = monitor.didDrop();\n      if (!didDrop) {\n        props.setPlacement({\n          id: \"\"\n        });\n      }\n\n    }\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  })\n);\n","// @ts-ignore\nimport styled from \"styled-components\";\nimport {\n  bulletMargin,\n  extraVerticalSpaceForChildren,\n  itemHeight,\n  itemMargin,\n  marginOffset,\n  plusHeight,\n  borderWidth,\n  highlighHeight,\n  circleWidth,\n  halfCircle\n} from \"../constants\";\n\nexport const AddNewNodeItem = styled.div`\n  position: absolute;\n  bottom: ${itemHeight / 2 - plusHeight / 2 + extraVerticalSpaceForChildren}px;\n  left: -${plusHeight / 2 + borderWidth}px;\n  width: ${plusHeight}px;\n  height: ${plusHeight}px;\n  &:hover {\n    background-color: black;\n  }\n`;\n\nexport const Highlighted = styled.div`\n  margin-left: ${props =>\n    marginOffset +\n    (props.relativeShift\n      ? props.relativeShift * (itemMargin + bulletMargin)\n      : 0)}px;\n  position: absolute;\n  left: 0;\n  right: 0;\n\n  height: ${highlighHeight}px;\n  background-color: grey;\n  ${props =>\n    props.highlightPlacement === \"PLACE_AFTER\" &&\n    `bottom: ${-highlighHeight / 2}px`}\n  ${props =>\n    props.highlightPlacement === \"PLACE_BEFORE\" &&\n    `top: ${-highlighHeight / 2}px`}\n`;\n\nexport const Bullet = styled.div`\n  height: ${circleWidth}px;\n  width: ${circleWidth}px;\n  background-color: grey;\n  border-radius: ${circleWidth}px;\n  margin-left: ${bulletMargin}px;\n  margin-right: ${bulletMargin}px;\n\n  ${props => props.isDragging && `transform: scale(0);`}\n  ${props =>\n    !props.isDragging &&\n    `&:hover {\n    transform: scale(1.8);\n  }`}\n`;\n\nexport const ChildrenSpace = styled.div`\n  position: relative;\n  border-left: solid black 1px;\n  padding-top: ${extraVerticalSpaceForChildren}px;\n\n  margin-left: ${halfCircle + bulletMargin}px;\n  margin-top: ${-extraVerticalSpaceForChildren}px;\n  margin-bottom: ${-extraVerticalSpaceForChildren}px;\n  padding-bottom: ${extraVerticalSpaceForChildren}px;\n`;\n\nexport const NodeContainer = styled.div`\n  padding-left: ${itemMargin - halfCircle}px;\n`;\n\nexport const NodeHeader = styled.div`\n  margin-left: ${-marginOffset}px;\n  padding-left: ${marginOffset}px;\n  height: ${itemHeight}px;\n  align-items: center;\n  display: flex;\n  position: relative;\n`;\n","export const itemMargin = 30;\n\n\nexport const borderWidth = 1;\n\nexport const circleWidth = 9;\nexport const halfCircle = circleWidth / 2;\nexport const itemHeight = 40;\nexport const plusHeight = 15;\nexport const highlighHeight = 5;\nexport const extraVerticalSpaceForChildren = highlighHeight / 2;\nexport const marginOffset = 500;\nexport const bulletMargin = 10;\n","import { DropTarget } from \"react-dnd\";\nimport {bulletMargin, itemMargin} from \"./constants\";\n\nexport const getVerticalPlacement = (rect, yPosition) => {\n  const middlePoint = (rect.bottom + rect.top) / 2;\n  if (middlePoint >= yPosition) return \"PLACE_BEFORE\";\n  else return \"PLACE_AFTER\";\n};\n\nexport default DropTarget(\n  \"CARD\",\n  {\n    drop(props) {\n      props.setPlacement({\n        id: \"\"\n      });\n    },\n    hover(props, monitor, component) {\n      if (!component) {\n        return null;\n      }\n      const node = component.getNode();\n      if (!node) {\n        return null;\n      }\n\n      const hoverBoundingRect = node.getBoundingClientRect();\n      const clientOffset = monitor.getClientOffset();\n\n      const placement = getVerticalPlacement(hoverBoundingRect, clientOffset.y);\n\n      let differenceFromInitialOffset = monitor.getSourceClientOffset() || {\n        x: 0\n      };\n      const diff = differenceFromInitialOffset.x;\n      const divider = itemMargin  + bulletMargin;\n      let placementLevel = Math.floor((itemMargin + diff) / divider);\n      props.setPlacement({\n        itemBeingDragged: monitor.getItem().id,\n        id: props.id,\n        highlightPlacement: placement,\n        relativeShift: placementLevel - props.level\n      });\n    }\n  },\n  (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver()\n  })\n);\n","import React, { useImperativeHandle, useRef } from \"react\";\nimport DragSource from \"./DragSource\";\nimport {\n  AddNewNodeItem,\n  Bullet,\n  Highlighted,\n  ChildrenSpace,\n  NodeContainer,\n  NodeHeader\n} from \"./components/components\";\nimport DropTarget from \"./DropTarget\";\n\nconst Node = React.forwardRef(\n  (\n    {\n      text,\n      style,\n      children,\n      highlightPlacement,\n      relativeShift,\n      connectDragSource,\n      connectDropTarget,\n      isDragging\n    },\n    ref\n  ) => {\n    const elementRef = useRef(null);\n\n    useImperativeHandle(ref, () => ({\n      getNode: () => elementRef.current\n    }));\n\n    return (\n      <NodeContainer style={style}>\n        {connectDropTarget(\n          <div ref={elementRef}>\n            <NodeHeader>\n              {highlightPlacement && (\n                <Highlighted\n                  highlightPlacement={highlightPlacement}\n                  relativeShift={relativeShift}\n                />\n              )}\n              {connectDragSource(\n                <div>\n                  <Bullet isDragging={isDragging} />\n                </div>\n              )}\n              <span>{text}</span>\n            </NodeHeader>\n          </div>\n        )}\n        {children && (\n          <ChildrenSpace>\n            {children}\n            <AddNewNodeItem />\n          </ChildrenSpace>\n        )}\n      </NodeContainer>\n    );\n  }\n);\n\nNode.displayName = \"Node\";\n\nexport default DropTarget(DragSource(Node));\n","import React, {Fragment} from \"react\";\nimport {DragDropContext} from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\n\nconst Context = ({children}) => <Fragment>\n  {children}\n</Fragment>;\n\nexport default DragDropContext(HTML5Backend)(Context);\n","import React, { Fragment, useState } from \"react\";\nimport { canDragOver, convertPlacement, areEqualShallow } from \"./rules\";\nimport { createInitialNodes } from \"./nodes\";\nimport Node from \"./Node\";\nimport DragDropContext from \"./DragDropContext\";\nimport { NodeType, Placement, Tree } from \"./types\";\n\nexport default ({ tree }: { tree: Tree }) => {\n  const [placement, setPlacement] = useState({\n    id: \"\"\n  });\n\n  const updatePlacement = (newPlacement: Placement) => {\n    if (canDragOver(tree.nodes, newPlacement)) {\n      const converted = convertPlacement(tree.nodes, newPlacement);\n      if (!areEqualShallow(converted, placement)) {\n        setPlacement(converted);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <DragDropContext>\n        <TreeUI\n          tree={createInitialNodes()}\n          nodes={tree.roots}\n          placement={placement}\n          setPlacement={updatePlacement}\n        />\n      </DragDropContext>\n    </div>\n  );\n};\n\nconst TreeUI = ({ tree, nodes, placement, level = 1, setPlacement }: any) => {\n  return (\n    <Fragment>\n      {nodes.map((id: string) => (\n        // @ts-ignore\n        <Node\n          id={id}\n          key={id}\n          text={tree[id].text}\n          level={level}\n          setPlacement={setPlacement}\n          {...getPlacementProps(tree[id], placement)}\n        >\n          {tree[id].children && (\n            <TreeUI\n              tree={tree}\n              nodes={tree[id].children}\n              placement={placement}\n              level={level + 1}\n              setPlacement={setPlacement}\n            />\n          )}\n        </Node>\n      ))}\n    </Fragment>\n  );\n};\n\nconst getPlacementProps = (node: NodeType, placement: Placement) => {\n  if (node.id !== placement.id) return undefined;\n  return placement;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport Tree from \"./tree/Tree\";\nimport {createInitialNodes} from \"./tree/nodes\";\nimport {findRoots} from \"./tree/rules\";\n\nexport default () => (\n  <Tree\n    tree={{\n      nodes: createInitialNodes(),\n      roots: findRoots(createInitialNodes())\n    }}\n  />\n);\n"],"sourceRoot":""}