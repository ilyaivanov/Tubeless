{"version":3,"sources":["tree/components/NodeContainer.ts","tree/components/constants.tsx","tree/components/Common.ts","tree/components/Arrow.tsx","tree/components/Border.ts","tree/components/Bullet.tsx","tree/components/NodeText.ts","tree/components/NodeIcons.tsx","domain/nodes.utils.ts","domain/array.utils.ts","tree/dnd.tsx","tree/types.ts","tree/offsetHandler.ts","tree/sampleTrees.ts","player/index.tsx","domain/dropRules.ts","tree/NodeTitle.tsx","tree/Node.tsx","tree/Tree.tsx","TreeUpdatesHandler.tsx","domain/shallowCompare.ts","youtube/api.ts","App.tsx","hooks.ts","keys.ts","serviceWorker.ts","index.tsx"],"names":["NodeContainer","styled","div","_templateObject","props","level","Center","Common_templateObject","Arrow","react_default","a","createElement","ArrowContainer","onClick","ArrowIcon","data-testid","nodeId","orientation","Arrow_templateObject","getStyleForOrientation","_templateObject2","smallSide","toFixed","concat","width","Border","Border_templateObject","placement","dragLevel","Bullet","React","forwardRef","_ref","ref","itemId","CircleContainer","Circle","color","hoverColor","Bullet_templateObject","Bullet_templateObject2","NodeText","span","NodeText_templateObject","NodeIcons","onEdit","onDelete","IconsContainer","NodeIcons_templateObject","removeNode","nodes","parent","validateParent","getParentKey","updateNode","node","children","items","item","filter","i","getRootKey","array","length","Error","first","getNodePath","path","Object","keys","find","key","indexOf","id","updated","objectSpread","defineProperty","insertDragItemAtPlacement","context","action","index","targetIndex","copy","toConsumableArray","splice","itemBeingDragged","parentId","createId","Math","random","DragContext","DragDropContext","HTML5Backend","react","TreeDragSource","DragSource","beginDrag","endDrag","monitor","didDrop","setPlacement","connect","connectDragSource","dragSource","Roots","TreeDropTarget","DropTarget","drop","onDrop","hover","component","getNode","rect","yPosition","hoverBoundingRect","getBoundingClientRect","clientOffset","getClientOffset","y","bottom","top","offsetWithoutArrow","max","x","floor","isFirst","maxDragLevel","desiredDragLevel","desiredPlacement","getItem","connectDropTarget","dropTarget","sampleNodes","video","root","FAVORITES","SEARCH","text","type","label","videoUrl","imageUrl","rootType","YoutubePlayerWrapper","style","YouTube","assign","onReady","e","target","opts","height","playerVars","autoplay","position","right","Player","videoId","_useState","useState","_useState2","slicedToArray","setPlayer","player_YoutubePlayerWrapper","isDraggingFromDifferentScopes","newId","newPlacement","insertNode","copyNode","newNodeId","newNodes","newIds","map","reduce","state","undefined","nodeLevel","getItemLevel","NodeTitle","onUpdate","isEditing","setIsEditing","_useState3","_useState4","setText","endEdit","onBlur","autoFocus","onKeyPress","value","onChange","NodeIcons_NodeIcons","onToggleCollapse","onPlay","elementRef","useRef","useImperativeHandle","current","Arrow_Arrow","isHidden","src","alt","paddingRight","tree_NodeTitle","validateChildren","forEach","hasChildren","Tree","ids","Node","TreeUpdatesHandler","setNodes","zone","tree_Tree","objA","objB","aKeys","bKeys","len","shallowEqual","newNode","withChild","logRequest","term","console","log","LayoutManager","_ref2","renderRight","renderLeft","onSearchDone","_useState7","_useState8","seachVisible","setSearchVisibility","flex","backgroundColor","flexDirection","display","alignItems","App_Search","isVisible","renderTree","Search","_ref3","_useState9","_useState10","setValue","throttledValue","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","fetch","then","response","json","data","videos","v","s","title","snippet","previewUrl","thumbnails","default","url","justifyContent","App","processDefaultNodes","_useState5","_useState6","nodeBeingPlayed","setNodeBeingPlayer","App_LayoutManager","videoNodes","some","res","src_TreeUpdatesHandler","src_player","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf535c83.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { LEVEL_SHIFT } from \"./constants\";\n\ninterface NodeContainerProps {\n  level: number;\n}\n\nexport const NodeContainer = styled.div<NodeContainerProps>`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  padding-left: ${(props: NodeContainerProps) => props.level * LEVEL_SHIFT}px;\n`;\n","export const ARROW_SIZE = 15;\n\nexport const LEVEL_SHIFT = 20;\n","import styled from \"styled-components\";\n\nexport const Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\nimport React, { MouseEventHandler } from \"react\";\nimport { ARROW_SIZE } from \"./constants\";\nimport { NodeContainer } from \"./NodeContainer\";\nimport { Center } from \"./Common\";\n\ntype ArrowIconOrientation = \"right\" | \"down\";\n\ninterface ArrowProps {\n  nodeId: string;\n  onClick: MouseEventHandler;\n  orientation: ArrowIconOrientation;\n}\n\nexport const Arrow = (props: ArrowProps) => (\n  <ArrowContainer onClick={props.onClick}>\n    <ArrowIcon\n      data-testid={\"arrow-\" + props.nodeId}\n      orientation={props.orientation}\n    />\n  </ArrowContainer>\n);\n\ninterface ArrowIconProps {\n  orientation: ArrowIconOrientation;\n}\n\nconst ArrowIcon = styled.div<ArrowIconProps>`\n  width: 0;\n  height: 0;\n  border-style: solid;\n  ${(props: ArrowIconProps) => getStyleForOrientation(props.orientation)};\n  visibility: hidden;\n  ${NodeContainer}:hover & {\n    visibility: visible;\n  }\n`;\n\nconst ArrowContainer = styled(Center)`\n  height: ${ARROW_SIZE}px;\n  width: ${ARROW_SIZE}px;\n`;\n\nconst getStyleForOrientation = (orientation: ArrowIconOrientation) => {\n  const width = 8;\n  const side = width / 2;\n  const smallSide = (side * 1.73205).toFixed(1);\n  const color = \"rgb(75, 81, 85)\";\n  if (orientation === \"right\") {\n    return `\n    border-width: ${side}px 0 ${side}px ${smallSide}px;\n    border-color: transparent transparent transparent ${color};\n  `;\n  } else\n    return `  \n    border-width: ${smallSide}px ${side}px 0 ${side}px;\n    border-color: ${color} transparent transparent transparent;\n    `;\n};\n","import styled from \"styled-components\";\nimport { ARROW_SIZE, LEVEL_SHIFT } from \"./constants\";\n\nexport const Border = styled.div`\n  height: 2px;\n  background-color: grey;\n  position: absolute;\n  left: ${(props: any) =>\n    ARROW_SIZE + props.placement.dragLevel * LEVEL_SHIFT}px;\n  right: 0;\n  ${(props: any) =>\n    props.placement.orientation === \"AFTER\" ? \"bottom: -1px\" : \"top: -1px\"};\n` as any;\n","import styled from \"styled-components\";\nimport React, { Ref } from \"react\";\n\ninterface CircleProps {\n  width: number;\n  color: string;\n  hoverColor?: string;\n}\n\ninterface BulletProps {\n  itemId: string;\n}\n\nexport const Bullet = React.forwardRef(\n  ({ itemId }: BulletProps, ref: Ref<HTMLDivElement>) => (\n    <CircleContainer ref={ref} data-testid={\"drag-handle-\" + itemId}>\n      <Circle\n        width={18}\n        color=\"rgb(220, 224, 226)\"\n        hoverColor={\"rgb(183, 188, 191)\"}\n      >\n        <Circle width={8} color=\"rgb(75, 81, 85)\" />\n      </Circle>\n    </CircleContainer>\n  )\n);\n\nconst Circle = styled.div<CircleProps>`\n  border-radius: 10px;\n  width: ${(props: CircleProps) => `${props.width}px`};\n  height: ${(props: CircleProps) => `${props.width}px`};\n  background-color: ${(props: CircleProps) => `${props.color}`};\n  ${(props: CircleProps) =>\n    props.hoverColor\n      ? `&:hover{\n    background-color: ${props.hoverColor}\n  }`\n      : \"\"};\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CircleContainer = styled.div`\n  margin-right: 5px;\n`;\n","import styled from \"styled-components\";\n\nexport const NodeText = styled.span``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NodeContainer } from \"./NodeContainer\";\n\ninterface Props {\n  nodeId: string;\n  onEdit: () => void;\n  onDelete: () => void;\n}\n\nconst NodeIcons = ({ onEdit, onDelete, nodeId }: Props) => (\n  <IconsContainer>\n    <button data-testid={\"edit-\" + nodeId} onClick={onEdit}>\n      E\n    </button>\n    <button data-testid={\"delete-\" + nodeId} onClick={onDelete}>\n      X\n    </button>\n  </IconsContainer>\n);\n\nconst IconsContainer = styled.div`\n  visibility: hidden;\n  ${NodeContainer}:hover & {\n    visibility: visible;\n  }\n  padding-left: 10px;\n`;\n\nexport { NodeIcons };\n","import { Node, Nodes, Placement } from \"../tree/types\";\nimport { except, contains, first } from \"./array.utils\";\n\nexport const removeNode = (nodes: Nodes, nodeId: string) => {\n  const parent = validateParent(getParentKey(nodes, nodeId), nodeId);\n  return updateNode(nodes, parent, node => ({\n    children: except(node.children, nodeId)\n  }));\n};\n\n//TODO: ugly code, consider to refactor it\nexport const copyNode = (\n  nodes: Nodes,\n  nodeId: string,\n  newNodeId: string\n): Nodes => {\n  let newNodes;\n  const children = nodes[nodeId].children;\n  if (children) {\n    const newIds = children.map(() => createId());\n\n    newNodes = newIds.reduce((state, newId, index) => {\n      return copyNode(state, children[index], newId);\n    }, nodes);\n    newNodes = updateNode(newNodes, newNodeId, node => ({\n      ...node,\n      children: newIds\n    }));\n  } else {\n    newNodes = nodes;\n  }\n  return {\n    ...newNodes,\n    [newNodeId]: {\n      ...newNodes[nodeId],\n      children: newNodes[newNodeId] ? newNodes[newNodeId].children : undefined,\n      id: newNodeId\n    }\n  };\n};\n\nexport const getItemLevel = (nodes: Nodes, nodeId: string) =>\n  getNodePath(nodes, nodeId).length - 2;\n\nexport const getRootKey = (nodes: Nodes, nodeId: string): string =>\n  first(getNodePath(nodes, nodeId));\n\nconst getNodePath = (nodes: Nodes, nodeId: string) => {\n  let path = [nodeId];\n  let parent = getParentKey(nodes, nodeId);\n  while (parent) {\n    path = [parent].concat(path);\n    parent = getParentKey(nodes, parent);\n  }\n  return path;\n};\n\nexport const getParentKey = (\n  nodes: Nodes,\n  nodeId: string\n): string | undefined =>\n  Object.keys(nodes).find(key => contains(nodes[key].children, nodeId));\n\nexport const updateNode = (\n  nodes: Nodes,\n  id: string,\n  updated: (node: Node) => Partial<Node>\n): Nodes => {\n  return {\n    ...nodes,\n    [id]: {\n      ...nodes[id],\n      ...updated(nodes[id])\n    }\n  };\n};\n\nexport function insertDragItemAtPlacement(\n  context: string[],\n  action: Placement\n): string[] {\n  let index = context.indexOf(action.id);\n  const targetIndex = action.orientation === \"AFTER\" ? index + 1 : index;\n  const copy = [...context];\n  copy.splice(targetIndex, 0, action.itemBeingDragged);\n  return copy;\n}\n\nexport const validateParent = (\n  parentId: string | undefined,\n  nodeId: string\n): string => {\n  if (!parentId)\n    throw new Error(\n      \"Expected parent for node \" + nodeId + \", but not \" + parentId\n    );\n  return parentId;\n};\n\nexport const createNode = (nodes: Nodes, node: Node): Nodes => {\n  return { ...nodes, [node.id]: node };\n};\n\n//ID utils\nexport const createId = (): string => {\n  return Math.random() + \"\";\n};\n","export function contains<T>(array: T[] | undefined, item: T): boolean {\n  return !!array && array.indexOf(item) >= 0;\n}\n\nexport function first<T>(array: T[]): T {\n  if (!array || array.length === 0)\n    throw new Error(\"Expected a non-empty array \" + array);\n  return array[0];\n}\n\nexport function except<T>(items: T[] | undefined, item: T): T[] {\n  if (!items) return [];\n  return items.filter(i => i !== item);\n}\n\n","import React, { Fragment } from \"react\";\nimport { DragDropContext, DragSource, DropTarget } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { Placement, PlacementOrientation } from \"./types\";\nimport { getBoundingClientRect, getClientOffset } from \"./offsetHandler\";\nimport {ARROW_SIZE, LEVEL_SHIFT} from \"./components\";\nimport { NodeProps } from \"./Node\";\nimport { getParentKey, validateParent } from \"../domain/nodes.utils\";\n\nconst Context = ({ children }: { children: JSX.Element }) => (\n  <Fragment>{children}</Fragment>\n);\n\nexport const DragContext = DragDropContext(HTML5Backend)(Context);\n\nexport const TreeDragSource = DragSource(\n  \"NODE\",\n  {\n    beginDrag: (props: NodeProps) => {\n      return {\n        id: props.node.id\n      };\n    },\n    endDrag: (props: NodeProps, monitor: any) => {\n      const didDrop = monitor.didDrop();\n      if (!didDrop) {\n        props.setPlacement({\n          id: \"\"\n        });\n      }\n    }\n  },\n  connect => ({\n    connectDragSource: connect.dragSource()\n  })\n);\n\nfunction getVerticalPlacement(\n  rect: DOMRectReadOnly,\n  yPosition: number\n): PlacementOrientation {\n  const middlePoint = (rect.bottom + rect.top) / 2;\n  return middlePoint >= yPosition ? \"BEFORE\" : \"AFTER\";\n}\n\nexport const TreeDropTarget = DropTarget(\n  \"NODE\",\n  {\n    drop(props: NodeProps) {\n      props.onDrop();\n    },\n    hover(props: NodeProps, monitor: any, component: any) {\n      if (!component) {\n        return null;\n      }\n      const node = component.getNode();\n      if (!node) {\n        return null;\n      }\n\n      const hoverBoundingRect = getBoundingClientRect(node);\n      const clientOffset = getClientOffset(monitor);\n\n      const placement = getVerticalPlacement(hoverBoundingRect, clientOffset.y);\n\n      const offsetWithoutArrow = Math.max(\n        clientOffset.x - ARROW_SIZE - hoverBoundingRect.x,\n        0\n      );\n\n      const dragLevel = Math.floor(offsetWithoutArrow / LEVEL_SHIFT);\n\n      const parent = validateParent(getParentKey(props.nodes, props.node.id), props.node.id);\n      const context = props.nodes[parent].children || [];\n      const isFirst = context.indexOf(props.node.id) === 0;\n\n      const maxDragLevel =\n        placement === \"BEFORE\" && isFirst ? props.level : props.level + 1;\n\n      const desiredDragLevel =\n        dragLevel > maxDragLevel ? maxDragLevel : dragLevel;\n\n      const desiredPlacement: Placement = {\n        itemBeingDragged: monitor.getItem().id,\n        id: props.node.id,\n        orientation: placement,\n        dragLevel: desiredDragLevel\n      };\n      props.setPlacement(desiredPlacement);\n    }\n  },\n  connect => ({\n    connectDropTarget: connect.dropTarget()\n  })\n);\n","export interface Node {\n  id: string;\n  text: string;\n  children?: string[];\n  isHidden?: boolean;\n\n  type: \"root\" | \"generic\" | \"video\";\n  videoUrl?: string;\n  imageUrl?: string;\n}\n\nexport interface Nodes {\n  [id: string]: Node;\n}\n\nexport interface TreeInfo {\n  nodes: Nodes;\n  roots: string[];\n  searchRoots: string[];\n}\n\nexport type PlacementOrientation = \"BEFORE\" | \"AFTER\";\n\nexport type Placement = {\n  id: string;\n  orientation: PlacementOrientation;\n  dragLevel: number;\n  itemBeingDragged: string;\n};\n\nexport enum Roots {\n  FAVORITES = \"ROOT.favorites\",\n  SEARCH = \"ROOT.search\",\n}\n","//used to stub dependencies over the sizes of the dom elements\n\nexport const getClientOffset = (monitor: any) => monitor.getClientOffset();\n\nexport const getBoundingClientRect = (node: any) =>\n  node.getBoundingClientRect();\n","import {Node, Nodes, Roots} from \"./types\";\n\nconst sampleNodes: Nodes = {\n  ...node(\"1\", [\"1.1\", \"1.2\"]),\n  ...node(\"1.1\"),\n  ...node(\"1.2\", [\"1.2.1\"]),\n  ...node(\"1.2.1\"),\n  ...node(\"2\", [\"2.1\"]),\n  ...node(\"2.1\", [\"2.1.1\"]),\n  ...node(\"2.1.1\"),\n  ...node(\"Ambient\", [\n    \"Carbon Based Lifeforms Album 1\",\n    \"Carbon Based Lifeforms Album 2\"\n  ]),\n  ...video(\n    \"Carbon Based Lifeforms Album 1\",\n    \"f5ddAAYasgM\",\n    \"https://picsum.photos/id/190/132/132?grayscale\"\n  ),\n  ...video(\n    \"Carbon Based Lifeforms Album 2\",\n    \"KQE29az48gM\",\n    \"https://picsum.photos/id/191/132/132?grayscale\"\n  ),\n  ...root([\"1\", \"2\"], Roots.FAVORITES),\n  ...root(['Ambient'], Roots.SEARCH)\n};\n\nexport { sampleNodes };\n\nexport function node(id: string, children?: string[]) {\n  const node: Node = {\n    id,\n    text: \"Node \" + id,\n    children,\n    type: \"generic\"\n  };\n  return {\n    [id]: node\n  };\n}\n\nfunction video(label: string, videoUrl: string, imageUrl: string) {\n  const node: Node = {\n    id: label,\n    text: label,\n    type: \"video\",\n    imageUrl,\n    videoUrl\n  };\n  return {\n    [label]: node\n  };\n}\n\nexport function root(nodes: string[], rootType: Roots) {\n  const node: Node = {\n    id: rootType,\n    text: rootType,\n    children: nodes,\n    type: \"root\"\n  };\n  return {\n    [rootType]: node\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport Youtube from \"react-youtube\";\n\ninterface Props {\n  videoId?: string;\n}\n\nconst Player = ({ videoId }: Props) => {\n  const [player, setPlayer] = useState();\n\n  // useEffect(() => {\n  //   if (player) {\n  //     console.log(\"playing video\");\n  //     player.playVideo();\n  //   }\n  // }, [player]);\n\n  if (!videoId) return null;\n\n  return <YoutubePlayerWrapper onReady={setPlayer} videoId={videoId} />;\n};\n\nconst YoutubePlayerWrapper = (props: any) => (\n  <div style={style}>\n    <Youtube\n      {...props}\n      onReady={e => props.onReady(e.target)}\n      data-testid=\"player\"\n      opts={{\n        height: \"150\",\n        width: \"220\",\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1\n        }\n      }}\n    />\n  </div>\n);\n\nconst style = {\n  position: \"absolute\",\n  right: 15,\n  bottom: 15\n} as {};\n\nexport default Player;\n","import { Nodes, Placement } from \"../tree/types\";\nimport {\n  getRootKey,\n  copyNode,\n  getItemLevel,\n  validateParent,\n  updateNode,\n  removeNode,\n  getParentKey,\n  insertDragItemAtPlacement,\n  createId\n} from \"./nodes.utils\";\n\nexport const drop = (nodes: Nodes, placement: Placement): Nodes => {\n  if (placement.itemBeingDragged === placement.id) return nodes;\n  if (isDraggingFromDifferentScopes(nodes, placement)) {\n    const newId = createId();\n    const newPlacement = {\n      ...placement,\n      itemBeingDragged: newId\n    };\n    return insertNode(\n      copyNode(nodes, placement.itemBeingDragged, newId),\n      newPlacement\n    );\n  }\n  return insertNode(removeNode(nodes, placement.itemBeingDragged), placement);\n};\n\nconst insertNode = (nodes: Nodes, placement: Placement): Nodes => {\n  if (placement.dragLevel !== 0) {\n    const nodeLevel = getItemLevel(nodes, placement.id);\n    if (placement.dragLevel > nodeLevel) {\n      return updateNode(nodes, placement.id, node => ({\n        children: [placement.itemBeingDragged].concat(node.children || [])\n      }));\n    }\n  }\n\n  const parent = validateParent(\n    getParentKey(nodes, placement.id),\n    placement.id\n  );\n  return updateNode(nodes, parent, node => ({\n    children: insertDragItemAtPlacement(node.children as string[], placement)\n  }));\n};\n\n\nconst isDraggingFromDifferentScopes = (nodes: Nodes, placement: Placement) =>\n  getRootKey(nodes, placement.id) !==\n  getRootKey(nodes, placement.itemBeingDragged);\n","import { Node } from \"./types\";\nimport React, { KeyboardEvent, useState, Fragment } from \"react\";\nimport { NodeIcons, NodeText } from \"./components\";\n\ninterface Props {\n  node: Node;\n  onUpdate: (node: Partial<Node>) => void;\n  onDelete: (node: Node) => void;\n}\n\nconst NodeTitle = ({ onDelete, onUpdate, node }: Props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [text, setText] = useState();\n\n  const onEdit = () => {\n    setText(node.text);\n    setIsEditing(true);\n  };\n\n  const onKey = (e: KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      endEdit();\n    }\n  };\n\n  const endEdit = () => {\n    onUpdate({\n      id: node.id,\n      text: text\n    });\n    setIsEditing(false);\n  };\n\n  return (\n    <Fragment>\n      {isEditing ? (\n        <input\n          data-testid={\"input-\" + node.id}\n          onBlur={endEdit}\n          autoFocus\n          onKeyPress={onKey}\n          type=\"text\"\n          value={text}\n          onChange={e => setText(e.target.value)}\n        />\n      ) : (\n        <NodeText data-testid={\"title-\" + node.id}>{node.text}</NodeText>\n      )}\n      <NodeIcons\n        nodeId={node.id}\n        onEdit={onEdit}\n        onDelete={() => onDelete(node)}\n      />\n    </Fragment>\n  );\n};\n\nexport default NodeTitle;\n","import React, { Ref, useImperativeHandle, useRef } from \"react\";\nimport { Node, Placement } from \"./types\";\nimport { Arrow, Border, Bullet, NodeContainer } from \"./components\";\nimport { TreeDragSource, TreeDropTarget } from \"./dnd\";\nimport NodeTitle from \"./NodeTitle\";\nimport {TreeProps} from \"./Tree\";\n\nexport interface NodeProps extends TreeProps{\n  children: JSX.Element;\n  level: number;\n  node: Node;\n  placement: Placement;\n  setPlacement: (placement: Partial<Placement>) => void;\n  onToggleCollapse: (id: string) => void;\n  onPlay: (nodeId: Node) => void;\n  onDelete: (nodeId: Node) => void;\n  onUpdate: (nodeId: Partial<Node>) => void;\n  onDrop: () => void;\n  connectDragSource: any;\n  connectDropTarget: any;\n}\n\nconst NodeElement = React.forwardRef(\n  (\n    {\n      children,\n      node,\n      level,\n      onToggleCollapse,\n      connectDragSource,\n      connectDropTarget,\n      placement,\n      onPlay,\n      onDelete,\n      onUpdate\n    }: NodeProps,\n    ref: Ref<HTMLDivElement>\n  ) => {\n    const elementRef = useRef<HTMLDivElement>(null);\n\n    // @ts-ignore\n    useImperativeHandle(ref, () => {\n      connectDropTarget(elementRef);\n      return {\n        getNode: () => elementRef.current\n      };\n    });\n\n    return (\n      <div>\n        <NodeContainer\n          data-testid={\"node-\" + node.id}\n          level={level}\n          ref={elementRef}\n        >\n          <Arrow\n            orientation={node.isHidden ? \"right\" : \"down\"}\n            nodeId={node.id}\n            onClick={() => onToggleCollapse(node.id)}\n          />\n          {node.type === \"video\" ? (\n            <img\n              onClick={() => onPlay(node)}\n              data-testid={`video-image-${node.id}`}\n              src={node.imageUrl}\n              alt=\"Cover image\"\n              style={{ height: 32, width: 32, paddingRight: 5 }}\n              ref={connectDragSource}\n            />\n          ) : (\n            <Bullet itemId={node.id} ref={connectDragSource} />\n          )}\n          <NodeTitle node={node} onDelete={onDelete} onUpdate={onUpdate} />\n          {node.id === placement.id && (\n            <Border\n              placement={placement}\n              level={level}\n              data-testid={\"border-\" + node.id}\n            />\n          )}\n        </NodeContainer>\n        {children}\n      </div>\n    );\n  }\n);\n\nexport default TreeDropTarget(TreeDragSource(NodeElement));\n","import React, { Fragment } from \"react\";\nimport { Node, Nodes, Placement } from \"./types\";\nimport NodeElement from \"./Node\";\nimport { getParentKey } from \"../domain/nodes.utils\";\n\nexport interface TreeProps {\n  nodes: Nodes;\n  ids: string[];\n  level: number;\n  onToggleCollapse: (id: string) => void;\n  placement: Partial<Placement>;\n  setPlacement: (placement: Partial<Placement>) => void;\n  onDrop: () => void;\n  onPlay: (node: Node) => void;\n  onDelete: (node: Node) => void;\n  onUpdate: (node: Partial<Node>) => void;\n}\n\nconst Tree = (props: TreeProps) => {\n  const { nodes, ids, level } = props;\n  validateChildren(nodes, ids);\n  return (\n    <Fragment>\n      {ids.map(id => (\n        <NodeElement {...props} key={id} node={nodes[id]} level={level}>\n          {hasChildren(nodes[id]) && (\n            <Tree\n              {...props}\n              ids={nodes[id].children as string[]}\n              level={level + 1}\n            />\n          )}\n        </NodeElement>\n      ))}\n    </Fragment>\n  );\n};\n//check that all node children can be found in the Nodes tree\nconst validateChildren = (nodes: Nodes, children: string[]) => {\n  children.forEach(node => {\n    if (!nodes[node]) {\n      const parent = getParentKey(nodes, node);\n      throw new Error(\n        `Node '${parent}' contains a non-existing child '${node}'. Check children of '${parent}'`\n      );\n    }\n  });\n};\n\nconst hasChildren = (node: Node) => node.children && !node.isHidden;\n\nexport default Tree;\n","import React, { Fragment, useState } from \"react\";\nimport { Node, Placement } from \"./tree/types\";\nimport { drop, } from \"./domain/dropRules\";\nimport { shallowEqual } from \"./domain/shallowCompare\";\nimport Tree from \"./tree/Tree\";\nimport {updateNode, removeNode} from \"./domain/nodes.utils\";\n\nconst TreeUpdatesHandler = ({\n  setNodes,\n  zone,\n  nodes,\n  placement,\n  setPlacement,\n  onPlay\n}: any) => {\n  const onToggleCollapse = (id: string) => {\n    setNodes(\n      updateNode(nodes, id, node => ({\n        isHidden: !node.isHidden\n      }))\n    );\n  };\n\n  const updatePlacementOptimized = (newPlacement: Partial<Placement>) => {\n    if (!shallowEqual(newPlacement, placement)) setPlacement(newPlacement);\n  };\n\n  const onDrop = () => {\n    setNodes(drop(nodes, placement as Placement));\n    setPlacement({});\n  };\n\n  const onUpdate = (newNode: Partial<Node>) => {\n    if (!newNode.id) return;\n    setNodes(\n      updateNode(nodes, newNode.id, node => Object.assign({}, node, newNode))\n    );\n  };\n\n  const addNewNode = () => {\n    //TODO: consider extract specific node creation logic\n    const id = Math.random() + \"\";\n    const node: Node = {\n      text: \"New Node\",\n      type: \"generic\",\n      id\n    };\n    const withChild = updateNode(nodes, zone, node => ({\n      children: (node.children as string[]).concat([id])\n    }));\n    setNodes({\n      ...withChild,\n      [id]: node\n    });\n  };\n\n  const onDelete = (node: Node) => setNodes(removeNode(nodes, node.id));\n  return (\n    <Fragment>\n      <Tree\n        nodes={nodes}\n        ids={nodes[zone].children}\n        level={0}\n        onToggleCollapse={onToggleCollapse}\n        setPlacement={updatePlacementOptimized}\n        onDrop={onDrop}\n        onPlay={onPlay}\n        onDelete={onDelete}\n        onUpdate={onUpdate}\n        placement={placement}\n      />\n      <button data-testid=\"add-new-node\" onClick={addNewNode}>\n        add\n      </button>\n    </Fragment>\n  );\n};\n\nexport default TreeUpdatesHandler;\n","export function shallowEqual(objA: any, objB: any) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import { SearchResponse } from \"./types/searchResponse\";\nimport { SimilarResponse } from \"./types/similarResponse\";\nimport { YOUTUBE_KEY } from \"../keys\";\n\ninterface YoutubeVideo {\n  title: string;\n  videoId: string;\n  previewUrl: string;\n}\n\nexport interface YoutubeVideoResponse {\n  videos: YoutubeVideo[];\n}\n\n// export const searchVideos = (term: string): Promise<YoutubeVideoResponse> => {\n//   console.log(\"requesting outube api with term\", term);\n//   return Promise.resolve({\n//     videos: [\n//       {\n//         title: \"Carbon based Lifeforms\",\n//         videoId: \"f5ddAAYasgM\",\n//         previewUrl: \"https://picsum.photos/id/948/132/132?grayscale\"\n//       }\n//     ]\n//   });\n// };\n\nexport const searchVideos = (term: string): Promise<YoutubeVideoResponse> =>\n  fetch(\n    `https://www.googleapis.com/youtube/v3/search?part=snippet&shart=mostPopular&maxResults=10&key=${YOUTUBE_KEY}&q=` +\n     logRequest(term)\n  )\n    .then(response => response.json())\n    .then((data: SearchResponse) => ({\n      videos: data.items\n        .filter(v => v.id.videoId)\n        .map(s => ({\n          title: s.snippet.title,\n          videoId: s.id.videoId,\n          previewUrl: s.snippet.thumbnails.default.url\n        }))\n    }));\n\n// export const searchSimilar = (videoId: string): Promise<YoutubeVideoResponse> =>\n//   fetch(\n//     `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&key=${YOUTUBE_KEY}&relatedToVideoId=` +\n//     videoId\n//   )\n//     .then(response => response.json())\n//     .then((data: SimilarResponse) =>\n//       data.items\n//         .filter(v => v.id.videoId)\n//         .map(s => {\n//           return {text: s.snippet.title, id: s.id.videoId};\n//         })\n//     );\n\n\nconst logRequest = (term: string) => {\n  console.log('Requesting Youtube for ', term);\n  return term;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { DragContext } from \"./tree/dnd\";\nimport { sampleNodes } from \"./tree/sampleTrees\";\nimport { Node, Nodes, Placement, Roots } from \"./tree/types\";\nimport Player from \"./player\";\nimport TreeUpdatesHandler from \"./TreeUpdatesHandler\";\nimport { searchVideos, YoutubeVideoResponse } from \"./youtube/api\";\nimport { useDebounce } from \"./hooks\";\nimport { createId, createNode, updateNode } from \"./domain/nodes.utils\";\n\ninterface Props {\n  processDefaultNodes?: (nodes: Nodes) => Nodes;\n}\n\nconst App: React.FC<Props> = ({ processDefaultNodes }) => {\n  const [nodes, setNodes] = useState(\n    processDefaultNodes ? processDefaultNodes(sampleNodes) : sampleNodes\n  );\n  const [placement, setPlacement] = useState({} as Partial<Placement>);\n\n  const [nodeBeingPlayed, setNodeBeingPlayer] = useState({} as Node);\n\n  const onPlay = (node: Node) => setNodeBeingPlayer(node);\n\n  const setSearchNodes = (videoNodes: YoutubeVideoResponse) => {\n    const children = videoNodes.videos.map(() => createId());\n    const some = updateNode(nodes, Roots.SEARCH, () => ({ children }));\n\n    const res = videoNodes.videos.reduce((state, video, index) => {\n      return createNode(state, {\n        text: video.title,\n        id: children[index],\n        type: \"video\",\n        videoUrl: video.videoId,\n        imageUrl: video.previewUrl,\n        isHidden: true\n      });\n    }, some);\n    setNodes(res);\n  };\n\n  return (\n    <div>\n      <DragContext>\n        <LayoutManager\n          onSearchDone={setSearchNodes}\n          renderRight={() => (\n            <TreeUpdatesHandler\n              zone={Roots.FAVORITES}\n              placement={placement}\n              setPlacement={setPlacement}\n              nodes={nodes}\n              setNodes={setNodes}\n              onPlay={onPlay}\n            />\n          )}\n          renderLeft={() => (\n            <TreeUpdatesHandler\n              zone={Roots.SEARCH}\n              placement={placement}\n              setPlacement={setPlacement}\n              nodes={nodes}\n              setNodes={setNodes}\n              onPlay={onPlay}\n            />\n          )}\n        />\n      </DragContext>\n      <Player videoId={nodeBeingPlayed.videoUrl} />\n    </div>\n  );\n};\n\nconst LayoutManager = ({ renderRight, renderLeft, onSearchDone }: any) => {\n  const [seachVisible, setSearchVisibility] = useState(false);\n  const style = seachVisible\n    ? { flex: 1 }\n    : { width: 40, backgroundColor: \"lightGrey\" };\n  return (\n    <div\n      style={{\n        flexDirection: \"row\",\n        display: \"flex\",\n        alignItems: \"stretch\",\n        height: \"100vh\"\n      }}\n    >\n      <div style={style} data-testid=\"search-zone\">\n        <Search\n          isVisible={seachVisible}\n          onSearchDone={onSearchDone}\n          onClick={() => setSearchVisibility(!seachVisible)}\n          renderTree={renderLeft}\n        />\n      </div>\n\n      <div style={{ flex: 1 }} data-testid=\"favorites-zone\">\n        {renderRight()}\n      </div>\n    </div>\n  );\n};\n\nconst Search = ({ isVisible, onClick, renderTree, onSearchDone }: any) => {\n  const [value, setValue] = useState(\"\");\n  const throttledValue = useDebounce(value, 500);\n  useEffect(() => {\n    if (throttledValue) searchVideos(throttledValue).then(onSearchDone);\n  }, [throttledValue]);\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: isVisible ? \"flex-end\" : \"center\",\n          paddingRight: isVisible ? 20 : 0\n        }}\n      >\n        <button data-testid=\"toggle-sidebar\" onClick={onClick}>\n          {isVisible ? \"<\" : \"+\"}\n        </button>\n      </div>\n      {isVisible && (\n        <input\n          data-testid=\"search-input\"\n          type=\"text\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n      )}\n      {isVisible && renderTree()}\n    </div>\n  );\n};\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport function useDebounce(value: any, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","export const YOUTUBE_KEY = 'AIzaSyBsCL-zrXWd9S2FKRSDVfz7dOo783LQkLk';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}