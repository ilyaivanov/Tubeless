{"version":3,"sources":["tree/components/NodeContainer.ts","tree/components/constants.tsx","tree/components/Common.ts","tree/components/Arrow.tsx","tree/components/Border.ts","tree/components/Bullet.tsx","tree/components/NodeText.ts","tree/components/NodeIcons.tsx","tree/components/VideoPreview.ts","utils/createId.ts","tree/treeValidation.ts","tree/treeOperations.ts","utils/arrayOperations.ts","tree/treeActions.ts","tree/dnd.tsx","tree/types.ts","tree/offsetHandler.ts","tree/sampleTrees.ts","player/index.tsx","keys.ts","youtube/api.ts","youtube/mapVideosToNodes.ts","tree/NodeTitle.tsx","tree/Node.tsx","tree/Tree.tsx","App.tsx","utils/useDebounce.ts","utils/shallowEqual.ts","serviceWorker.ts","index.tsx","tree/icons/folder-closed-withItems.svg","tree/icons/folder-closed-loader.svg","tree/icons/folder-closed-empty.svg","tree/icons/folder-opened-many.svg","tree/icons/folder-opened-single.svg","tree/icons/folder-opened-empty.svg"],"names":["NodeContainer","styled","div","_templateObject","props","level","Center","Common_templateObject","Arrow","react_default","a","createElement","ArrowContainer","onClick","ArrowIcon","data-testid","nodeId","orientation","Arrow_templateObject","getStyleForOrientation","_templateObject2","smallSide","toFixed","concat","width","Border","Border_templateObject","placement","dragLevel","Bullet","React","forwardRef","_ref","ref","node","CircleContainer","id","Img","src","getFolderIcon","alt","height","isHidden","children","length","FolderClosedNonEmpty","loader","FolderClosedLoader","FolderClosedEmpty","FolderOpenedMany","FolderOpenedSingle","FolderOpenedEmpty","img","Bullet_templateObject","Bullet_templateObject2","NodeText","span","NodeText_templateObject","NodeIcons","onEdit","onDelete","IconsContainer","NodeIcons_templateObject","VideoPreview","VideoPreview_templateObject","hasRoundImage","type","nodeType","createId","Math","random","validateParent","parentId","Error","updateNode","nodes","updated","Object","objectSpread","defineProperty","deleteNode","parent","getParentKey","items","item","filter","i","getRootKey","array","first","getNodePath","keys","find","key","indexOf","path","onSearchStart","isLoading","onSearchDone","newVideoNodes","map","n","withNodes","reduce","state","createNode","toggleVisibility","onDrop","itemBeingDragged","isDraggingFromDifferentScopes","newId","newPlacement","insertNode","copyNodeDeep","newNodeId","newNodes","newIds","index","undefined","nodeLevel","getNodeLevel","insertDragItemAtPlacement","context","action","targetIndex","copy","toConsumableArray","splice","DragContext","DragDropContext","HTML5Backend","react","TreeDragSource","DragSource","beginDrag","endDrag","monitor","didDrop","setPlacement","connect","connectDragSource","dragSource","Roots","TreeDropTarget","DropTarget","drop","setNodes","hover","component","getNode","rect","yPosition","hoverBoundingRect","getBoundingClientRect","clientOffset","getClientOffset","y","bottom","top","offsetWithoutArrow","max","x","floor","isFirst","maxDragLevel","desiredDragLevel","desiredPlacement","getItem","connectDropTarget","dropTarget","options","sampleNodes","channelId","createPlaylistLoader","video","label","playlistId","imageUrl","text","playlist","root","FAVORITES","SEARCH","videoUrl","rootType","YoutubePlayerWrapper","style","YouTube","assign","onReady","e","target","opts","playerVars","autoplay","position","right","Player","videoId","_useState","useState","_useState2","slicedToArray","setPlayer","player_YoutubePlayerWrapper","YOUTUBE_KEY","isItemSupported","itemKind","parseItem","kind","parseVideo","parsePlaylist","parseChannel","mapTitle","snippet","previewUrl","thumbnails","default","url","title","handleTitle","replace","logRequest","term","requestType","console","log","mapVideosToNodes","response","mapItem","getSpecific","getNodeType","NodeTitle","isEditing","setIsEditing","_useState3","_useState4","setText","endEdit","newText","onRenameNode","onDeleteNode","onBlur","autoFocus","onKeyPress","value","onChange","fontSize","color","NodeIcons_NodeIcons","onPlay","elementRef","useRef","useImperativeHandle","current","onToggleCollapse","fetch","then","json","data","v","s","resourceId","getChannelVideos","addPlaylistsLoader","getPlaylistsForChannel","Arrow_Arrow","tree_NodeTitle","validateChildren","forEach","hasChildren","Tree","ids","Node","LayoutManager","_ref2","renderRight","renderLeft","_useState7","_useState8","seachVisible","setSearchVisibility","flex","backgroundColor","flexDirection","display","alignItems","App_Search","isVisible","renderTree","Search","_ref3","_useState9","_useState10","setValue","throttledValue","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","justifyContent","paddingRight","App","processDefaultNodes","updateNodes","window","localStorage","setItem","JSON","stringify","res","parse","_useState5","_useState6","nodeBeingPlayed","setNodeBeingPlayer","updatePlacementOptimized","objA","objB","aKeys","bKeys","len","shallowEqual","count","addNewNodeForFavorites","withChild","onCreateNode","App_LayoutManager","tree_Tree","src_player","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3ef4ed40.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { LEVEL_SHIFT } from \"./constants\";\n\ninterface NodeContainerProps {\n  level: number;\n}\n\nexport const NodeContainer = styled.div<NodeContainerProps>`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  padding-left: ${(props: NodeContainerProps) => props.level * LEVEL_SHIFT}px;\n`;\n","export const ARROW_SIZE = 15;\n\nexport const LEVEL_SHIFT = 20;\n","import styled from \"styled-components\";\n\nexport const Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\nimport React, { MouseEventHandler } from \"react\";\nimport { ARROW_SIZE } from \"./constants\";\nimport { NodeContainer } from \"./NodeContainer\";\nimport { Center } from \"./Common\";\n\ntype ArrowIconOrientation = \"right\" | \"down\";\n\ninterface ArrowProps {\n  nodeId: string;\n  onClick: MouseEventHandler;\n  orientation: ArrowIconOrientation;\n}\n\nexport const Arrow = (props: ArrowProps) => (\n  <ArrowContainer onClick={props.onClick}>\n    <ArrowIcon\n      data-testid={\"arrow-\" + props.nodeId}\n      orientation={props.orientation}\n    />\n  </ArrowContainer>\n);\n\ninterface ArrowIconProps {\n  orientation: ArrowIconOrientation;\n}\n\nconst ArrowIcon = styled.div<ArrowIconProps>`\n  width: 0;\n  height: 0;\n  border-style: solid;\n  ${(props: ArrowIconProps) => getStyleForOrientation(props.orientation)};\n  visibility: hidden;\n  ${NodeContainer}:hover & {\n    visibility: visible;\n  }\n`;\n\nconst ArrowContainer = styled(Center)`\n  height: ${ARROW_SIZE}px;\n  width: ${ARROW_SIZE}px;\n  min-width: ${ARROW_SIZE}px;\n`;\n\nconst getStyleForOrientation = (orientation: ArrowIconOrientation) => {\n  const width = 8;\n  const side = width / 2;\n  const smallSide = (side * 1.73205).toFixed(1);\n  const color = \"rgb(75, 81, 85)\";\n  if (orientation === \"right\") {\n    return `\n    border-width: ${side}px 0 ${side}px ${smallSide}px;\n    border-color: transparent transparent transparent ${color};\n  `;\n  } else\n    return `  \n    border-width: ${smallSide}px ${side}px 0 ${side}px;\n    border-color: ${color} transparent transparent transparent;\n    `;\n};\n","import styled from \"styled-components\";\nimport { ARROW_SIZE, LEVEL_SHIFT } from \"./constants\";\n\nexport const Border = styled.div`\n  height: 2px;\n  background-color: grey;\n  position: absolute;\n  left: ${(props: any) =>\n    ARROW_SIZE + props.placement.dragLevel * LEVEL_SHIFT}px;\n  right: 0;\n  ${(props: any) =>\n    props.placement.orientation === \"AFTER\" ? \"bottom: -1px\" : \"top: -1px\"};\n` as any;\n","import styled from \"styled-components\";\nimport React, { Ref } from \"react\";\nimport { Node } from \"../types\";\nimport FolderClosedNonEmpty from \"../icons/folder-closed-withItems.svg\";\nimport FolderClosedLoader from \"../icons/folder-closed-loader.svg\";\nimport FolderClosedEmpty from \"../icons/folder-closed-empty.svg\";\nimport FolderOpenedMany from \"../icons/folder-opened-many.svg\";\nimport FolderOpenedSingle from \"../icons/folder-opened-single.svg\";\nimport FolderOpenedEmpty from \"../icons/folder-opened-empty.svg\";\nimport { NodeContainer } from \"./NodeContainer\";\n\ninterface BulletProps {\n  node: Node;\n}\n\nconst FOLDER_SIZE = 25;\n\nexport const Bullet = React.forwardRef(\n  ({ node }: BulletProps, ref: Ref<HTMLDivElement>) => (\n    <CircleContainer ref={ref} data-testid={\"drag-handle-\" + node.id}>\n      <Img\n        src={getFolderIcon(node)}\n        alt=\"\"\n        width={FOLDER_SIZE}\n        height={FOLDER_SIZE}\n      />\n    </CircleContainer>\n  )\n);\n\nconst getFolderIcon = (node: Node) => {\n  if (node.isHidden) {\n    if (node.children && node.children.length > 0) return FolderClosedNonEmpty;\n    if (node.loader) return FolderClosedLoader;\n    return FolderClosedEmpty;\n  }\n  const children = node.children;\n\n  if (!children) return FolderOpenedEmpty;\n\n  if (children.length > 1) return FolderOpenedMany;\n  else return FolderOpenedSingle;\n};\n\nconst Img = styled.img`\n  filter: invert(0.3);\n  ${NodeContainer}:hover & {\n    filter: invert(0);\n  }\n`;\n\nexport const CircleContainer = styled.div`\n  margin-right: 5px;\n`;\n","import styled from \"styled-components\";\n\nexport const NodeText = styled.span``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NodeContainer } from \"./NodeContainer\";\n\ninterface Props {\n  nodeId: string;\n  onEdit: () => void;\n  onDelete: () => void;\n}\n\nconst NodeIcons = ({ onEdit, onDelete, nodeId }: Props) => (\n  <IconsContainer>\n    <button data-testid={\"edit-\" + nodeId} onClick={onEdit}>\n      E\n    </button>\n    <button data-testid={\"delete-\" + nodeId} onClick={onDelete}>\n      X\n    </button>\n  </IconsContainer>\n);\n\nconst IconsContainer = styled.div`\n  visibility: hidden;\n  ${NodeContainer}:hover & {\n    visibility: visible;\n  }\n  padding-left: 10px;\n`;\n\nexport { NodeIcons };\n","import styled from \"styled-components\";\nimport { NodeType } from \"../types\";\n\ninterface Props {\n  type: NodeType;\n}\n\nexport const VideoPreview = styled.img<Props>`\n  height: 32px;\n  width: 32px;\n\n  max-width: 100%;\n\n  border-radius: ${(props: Props) => (hasRoundImage(props.type) ? 60 : 3)}px;\n\n  ${(props: Props) => (hasRoundImage(props.type) ? \"\" : \"height: auto\")};\n  margin-right: 5px;\n`;\n\nconst hasRoundImage = (nodeType: NodeType) =>\n  nodeType === \"Channel\" || nodeType === \"Playlist\";\n","export const createId = (): string => {\n  return Math.random() + \"\";\n};\n","export const validateParent = (\n  parentId: string | undefined,\n  nodeId: string\n): string => {\n  if (!parentId)\n    throw new Error(\n      \"Expected parent for node \" + nodeId + \", but not \" + parentId\n    );\n  return parentId;\n};\n","import { Node, Nodes } from \"./types\";\nimport { createId, contains, except, first } from \"../utils\";\nimport { validateParent } from \"./treeValidation\";\n\nexport const createNode = (nodes: Nodes, node: Node): Nodes => {\n  return { ...nodes, [node.id]: node };\n};\n\nexport const updateNode = (\n  nodes: Nodes,\n  id: string,\n  updated: (node: Node) => Partial<Node>\n): Nodes => {\n  return {\n    ...nodes,\n    [id]: {\n      ...nodes[id],\n      ...updated(nodes[id])\n    }\n  };\n};\n\nexport const deleteNode = (nodes: Nodes, nodeId: string) => {\n  const parent = validateParent(getParentKey(nodes, nodeId), nodeId);\n  const res  = updateNode(nodes, parent, node => ({\n    children: except(node.children, nodeId)\n  }));\n  return res;\n};\n\nexport const getNodeLevel = (nodes: Nodes, nodeId: string) =>\n  getNodePath(nodes, nodeId).length - 2;\n\nexport const getRootKey = (nodes: Nodes, nodeId: string): string =>\n  first(getNodePath(nodes, nodeId));\n\nexport const getParentKey = (\n  nodes: Nodes,\n  nodeId: string\n): string | undefined =>\n  Object.keys(nodes).find(key => contains(nodes[key].children, nodeId));\n\nconst getNodePath = (nodes: Nodes, nodeId: string) => {\n  let path = [nodeId];\n  let parent = getParentKey(nodes, nodeId);\n  while (parent) {\n    path = [parent].concat(path);\n    parent = getParentKey(nodes, parent);\n  }\n  return path;\n};\n\n//TODO: ugly code, consider to refactor it\nexport const copyNodeDeep = (\n  nodes: Nodes,\n  nodeId: string,\n  newNodeId: string\n): Nodes => {\n  let newNodes;\n  const children = nodes[nodeId].children;\n  if (children) {\n    const newIds = children.map(() => createId());\n\n    newNodes = newIds.reduce((state, newId, index) => {\n      return copyNodeDeep(state, children[index], newId);\n    }, nodes);\n    newNodes = updateNode(newNodes, newNodeId, node => ({\n      ...node,\n      children: newIds\n    }));\n  } else {\n    newNodes = nodes;\n  }\n  return {\n    ...newNodes,\n    [newNodeId]: {\n      ...newNodes[nodeId],\n      children: newNodes[newNodeId] ? newNodes[newNodeId].children : undefined,\n      id: newNodeId\n    }\n  };\n};\n","export function contains<T>(array: T[] | undefined, item: T): boolean {\n  return !!array && array.indexOf(item) >= 0;\n}\n\nexport function first<T>(array: T[]): T {\n  if (!array || array.length === 0)\n    throw new Error(\"Expected a non-empty array \" + array);\n  return array[0];\n}\n\nexport function except<T>(items: T[] | undefined, item: T): T[] {\n  if (!items) return [];\n  return items.filter(i => i !== item);\n}\n\n","import {Node, Nodes, NodeType, Placement} from \"./types\";\nimport {\n  copyNodeDeep,\n  createNode,\n  deleteNode,\n  getNodeLevel,\n  getParentKey,\n  getRootKey,\n  updateNode\n} from \"./treeOperations\";\nimport {createId} from \"../utils\";\nimport {validateParent} from \"./treeValidation\";\n\nexport const onCreateNode = (nodes: Nodes, parentId: string) => {\n  const id = Math.random() + \"\";\n  const node: Node = {\n    text: \"New Node\",\n    type: 'Composite',\n    id\n  };\n  const withChild = updateNode(nodes, parentId, node => ({\n    children: (node.children as string[]).concat([id])\n  }));\n  return {\n    ...withChild,\n    [id]: node\n  };\n};\n\nexport const onDeleteNode = (nodes: Nodes, nodeId: string) =>\n  deleteNode(nodes, nodeId);\n\nexport const onRenameNode = (nodes: Nodes, nodeId: string, newText: string) =>\n  updateNode(nodes, nodeId, () => ({\n    text: newText\n  }));\n\nexport const onSearchStart = (nodes: Nodes, nodeId: string) =>\n  updateNode(nodes, nodeId, () => ({\n    isLoading: true\n  }));\n\nexport const onSearchDone = (\n  nodes: Nodes,\n  parentId: string,\n  newVideoNodes: Node[]\n): Nodes => {\n  const children = newVideoNodes.map(n => n.id);\n  const withNodes = newVideoNodes.reduce(\n    (state, node) => createNode(state, node),\n    nodes\n  );\n\n  return updateNode(withNodes, parentId, () => ({\n    children,\n    isLoading: false,\n    isHidden: false\n  }));\n};\n\nexport const toggleVisibility = (nodes: Nodes, nodeId: string) =>\n  updateNode(nodes, nodeId, node => ({\n    isHidden: !node.isHidden\n  }));\n\nexport const onDrop = (nodes: Nodes, placement: Placement): Nodes => {\n  if (placement.itemBeingDragged === placement.id) return nodes;\n  if (isDraggingFromDifferentScopes(nodes, placement)) {\n    const newId = createId();\n    const newPlacement = {\n      ...placement,\n      itemBeingDragged: newId\n    };\n    return insertNode(\n      copyNodeDeep(nodes, placement.itemBeingDragged, newId),\n      newPlacement\n    );\n  }\n  return insertNode(deleteNode(nodes, placement.itemBeingDragged), placement);\n};\n\nconst insertNode = (nodes: Nodes, placement: Placement): Nodes => {\n  if (placement.dragLevel !== 0) {\n    const nodeLevel = getNodeLevel(nodes, placement.id);\n    if (placement.dragLevel > nodeLevel) {\n      return updateNode(nodes, placement.id, node => ({\n        children: [placement.itemBeingDragged].concat(node.children || [])\n      }));\n    }\n  }\n\n  const parent = validateParent(\n    getParentKey(nodes, placement.id),\n    placement.id\n  );\n  return updateNode(nodes, parent, node => ({\n    children: insertDragItemAtPlacement(node.children as string[], placement)\n  }));\n};\n\nconst isDraggingFromDifferentScopes = (nodes: Nodes, placement: Placement) =>\n  getRootKey(nodes, placement.id) !==\n  getRootKey(nodes, placement.itemBeingDragged);\n\nexport function insertDragItemAtPlacement(\n  context: string[],\n  action: Placement\n): string[] {\n  let index = context.indexOf(action.id);\n  const targetIndex = action.orientation === \"AFTER\" ? index + 1 : index;\n  const copy = [...context];\n  copy.splice(targetIndex, 0, action.itemBeingDragged);\n  return copy;\n}\n","import React, { Fragment } from \"react\";\nimport { DragDropContext, DragSource, DropTarget } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { Placement, PlacementOrientation } from \"./types\";\nimport { getBoundingClientRect, getClientOffset } from \"./offsetHandler\";\nimport {ARROW_SIZE, LEVEL_SHIFT} from \"./components\";\nimport { NodeProps } from \"./Node\";\nimport {getParentKey,} from \"./treeOperations\";\nimport {validateParent} from \"./treeValidation\";\nimport {onDrop} from \"./treeActions\";\n\nconst Context = ({ children }: { children: JSX.Element }) => (\n  <Fragment>{children}</Fragment>\n);\n\nexport const DragContext = DragDropContext(HTML5Backend)(Context);\n\nexport const TreeDragSource = DragSource(\n  \"NODE\",\n  {\n    beginDrag: (props: NodeProps) => {\n      return {\n        id: props.node.id\n      };\n    },\n    endDrag: (props: NodeProps, monitor: any) => {\n      const didDrop = monitor.didDrop();\n      if (!didDrop) {\n        props.setPlacement({\n          id: \"\"\n        });\n      }\n    }\n  },\n  connect => ({\n    connectDragSource: connect.dragSource()\n  })\n);\n\nfunction getVerticalPlacement(\n  rect: DOMRectReadOnly,\n  yPosition: number\n): PlacementOrientation {\n  const middlePoint = (rect.bottom + rect.top) / 2;\n  return middlePoint >= yPosition ? \"BEFORE\" : \"AFTER\";\n}\n\nexport const TreeDropTarget = DropTarget(\n  \"NODE\",\n  {\n    drop(props: NodeProps) {\n      props.setNodes(onDrop(props.nodes, props.placement));\n      props.setPlacement({\n        id: \"\"\n      });\n    },\n    hover(props: NodeProps, monitor: any, component: any) {\n      if (!component) {\n        return null;\n      }\n      const node = component.getNode();\n      if (!node) {\n        return null;\n      }\n\n      const hoverBoundingRect = getBoundingClientRect(node);\n      const clientOffset = getClientOffset(monitor);\n\n      const placement = getVerticalPlacement(hoverBoundingRect, clientOffset.y);\n\n      const offsetWithoutArrow = Math.max(\n        clientOffset.x - ARROW_SIZE - hoverBoundingRect.x,\n        0\n      );\n\n      const dragLevel = Math.floor(offsetWithoutArrow / LEVEL_SHIFT);\n\n      const parent = validateParent(getParentKey(props.nodes, props.node.id), props.node.id);\n      const context = props.nodes[parent].children || [];\n      const isFirst = context.indexOf(props.node.id) === 0;\n\n      const maxDragLevel =\n        placement === \"BEFORE\" && isFirst ? props.level : props.level + 1;\n\n      const desiredDragLevel =\n        dragLevel > maxDragLevel ? maxDragLevel : dragLevel;\n\n      const desiredPlacement: Placement = {\n        itemBeingDragged: monitor.getItem().id,\n        id: props.node.id,\n        orientation: placement,\n        dragLevel: desiredDragLevel\n      };\n      props.setPlacement(desiredPlacement);\n    }\n  },\n  connect => ({\n    connectDropTarget: connect.dropTarget()\n  })\n);\n","export type NodeType = \"Video\" | \"Playlist\" | \"Channel\" | \"Root\" | \"Composite\";\n\nexport type LoaderType = \"Playlists\";\n\nexport type Loader = {\n  type: LoaderType;\n  channelId: string;\n};\n\nexport interface Node {\n  id: string;\n  text: string;\n  children?: string[];\n  isHidden?: boolean;\n  isLoading?: boolean;\n\n  type: NodeType;\n\n  loader?: Loader;\n  videoUrl?: string;\n  channelId?: string;\n  playlistId?: string;\n  imageUrl?: string;\n}\n\nexport interface Nodes {\n  [id: string]: Node;\n}\n\nexport type PlacementOrientation = \"BEFORE\" | \"AFTER\";\n\nexport type Placement = {\n  id: string;\n  orientation: PlacementOrientation;\n  dragLevel: number;\n  itemBeingDragged: string;\n};\n\nexport enum Roots {\n  FAVORITES = \"ROOT.favorites\",\n  SEARCH = \"ROOT.search\"\n}\n","//used to stub dependencies over the sizes of the dom elements\n\nexport const getClientOffset = (monitor: any) => monitor.getClientOffset();\n\nexport const getBoundingClientRect = (node: any) =>\n  node.getBoundingClientRect();\n","import { Node, Nodes, NodeType, Roots } from \"./types\";\nimport { createId } from \"../utils\";\n\nconst sampleNodes: Nodes = {\n  ...node(\"1\", [\"1.1\", \"1.2\"]),\n  ...node(\"1.1\"),\n  ...node(\"1.2\", [\"1.2.1\"]),\n  ...node(\"1.2.1\"),\n  ...node(\"2\", [\"2.1\"]),\n  ...node(\"2.1\", [\"2.1.1\"]),\n  ...node(\"2.1.1\"),\n  ...createLoader(\"Loading Google Playlists\", {\n    channelId: \"UC_x5XG1OV2P6uZZ5FSM9Ttw\"\n  }),\n  ...node(\"Ambient\", [\n    \"Carbon Based Lifeforms Album 1\",\n    \"Carbon Based Lifeforms Album 2\"\n  ]),\n  ...video(\n    \"Carbon Based Lifeforms Album 1\",\n    \"f5ddAAYasgM\",\n    \"https://picsum.photos/id/190/132/132?grayscale\"\n  ),\n  ...video(\n    \"Carbon Based Lifeforms Album 2\",\n    \"KQE29az48gM\",\n    \"https://picsum.photos/id/191/132/132?grayscale\"\n  ),\n  ...playlist(\n    \"MyPlaylist\",\n    \"MyPlaylistId\",\n    \"https://picsum.photos/id/192/132/132?grayscale\"\n  ),\n  ...root([\"1\", \"2\", \"Loading Google Playlists\"], Roots.FAVORITES),\n  ...root([\"Ambient\"], Roots.SEARCH)\n};\n\nexport { sampleNodes };\n\nexport function node(id: string, children?: string[]) {\n  const node: Node = {\n    id,\n    text: \"Node \" + id,\n    children,\n    type: \"Composite\"\n  };\n  return {\n    [id]: node\n  };\n}\n\nfunction video(label: string, videoUrl: string, imageUrl: string) {\n  const node: Node = {\n    id: label,\n    text: label,\n    type: \"Video\",\n    imageUrl,\n    videoUrl\n  };\n  return {\n    [label]: node\n  };\n}\n\nfunction playlist(label: string, playlistId: string, imageUrl: string) {\n  const node: Node = {\n    id: label,\n    text: label,\n    type: \"Playlist\",\n    imageUrl,\n    playlistId\n  };\n  return {\n    [label]: node\n  };\n}\n\nfunction createLoader(id: string, options: { channelId: string }) {\n  return {\n    [id]: {\n      ...createPlaylistLoader(options.channelId),\n      id\n    }\n  };\n}\n\nexport function createPlaylistLoader(channelId: string): Node {\n  return {\n    id: createId(),\n    text: \"Playlists\",\n    type: \"Composite\",\n    isHidden: true,\n    loader: {\n      type: \"Playlists\",\n      channelId\n    }\n  };\n}\n\nexport function root(nodes: string[], rootType: Roots) {\n  const node: Node = {\n    id: rootType,\n    text: rootType,\n    children: nodes,\n    type: \"Root\"\n  };\n  return {\n    [rootType]: node\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport Youtube from \"react-youtube\";\n\ninterface Props {\n  videoId?: string;\n}\n\nconst Player = ({ videoId }: Props) => {\n  const [player, setPlayer] = useState();\n\n  // useEffect(() => {\n  //   if (player) {\n  //     console.log(\"playing video\");\n  //     player.playVideo();\n  //   }\n  // }, [player]);\n\n  if (!videoId) return null;\n\n  return <YoutubePlayerWrapper onReady={setPlayer} videoId={videoId} />;\n};\n\nconst YoutubePlayerWrapper = (props: any) => (\n  <div style={style}>\n    <Youtube\n      {...props}\n      onReady={e => props.onReady(e.target)}\n      data-testid=\"player\"\n      opts={{\n        height: \"150\",\n        width: \"220\",\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1\n        }\n      }}\n    />\n  </div>\n);\n\nconst style = {\n  position: \"absolute\",\n  right: 15,\n  bottom: 15\n} as {};\n\nexport default Player;\n","export const YOUTUBE_KEY = 'AIzaSyBsCL-zrXWd9S2FKRSDVfz7dOo783LQkLk';\n\n\n\n// Get playlists for Channel\n// https://www.googleapis.com/youtube/v3/playlists?part=snippet%2CcontentDetails&channelId=UC_x5XG1OV2P6uZZ5FSM9Ttw&maxResults=25&key=AIzaSyBsCL-zrXWd9S2FKRSDVfz7dOo783LQkLk\n\n\n// Get videos for Channel\n// https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=UC_x5XG1OV2P6uZZ5FSM9Ttw&maxResults=20&order=date&type=video&key=AIzaSyBsCL-zrXWd9S2FKRSDVfz7dOo783LQkLk\n","import {\n  ItemKind,\n  ItemsItem,\n  YoutubeSearchResponse\n} from \"./types/youtubeSearchResponse\";\nimport { YOUTUBE_KEY } from \"../keys\";\nimport { IS_REAL_API } from \"../featureToggles\";\nimport { searchFaked } from \"./types/fakedResponses\";\nimport { SimilarResponse } from \"./types/similarResponse\";\nimport { PlaylistVideosResponse } from \"./types/PlaylistVideosResponse\";\n\nexport type ItemType = \"Video\" | \"Channel\" | \"Playlist\";\n\ninterface Item {\n  title: string;\n  previewUrl: string;\n}\n\ninterface VideoItem extends Item {\n  type: \"Video\";\n  videoId: string;\n}\n\ninterface ChannelItem extends Item {\n  type: \"Channel\";\n  channelId: string;\n}\n\ninterface PlaylistItem extends Item {\n  type: \"Playlist\";\n  playlistId: string;\n}\n\nexport type SearchItem = VideoItem | ChannelItem | PlaylistItem;\n\nexport interface SearchResponse {\n  items: SearchItem[];\n}\n\nexport const searchVideos = (term: string): Promise<SearchResponse> =>\n  IS_REAL_API\n    ? fetch(\n        `https://www.googleapis.com/youtube/v3/search?part=snippet&shart=mostPopular&maxResults=10&key=${YOUTUBE_KEY}&q=` +\n          logRequest(term, \"search\")\n      )\n        .then(response => response.json())\n        .then((data: YoutubeSearchResponse) => ({\n          items: data.items\n            .filter(item => isItemSupported(item.id.kind))\n            .map(parseItem)\n        }))\n    : Promise.resolve(searchFaked(term));\n\nexport const searchSimilar = (videoId: string): Promise<SearchResponse> =>\n  fetch(\n    `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&key=${YOUTUBE_KEY}&relatedToVideoId=` +\n      logRequest(videoId, \"search similar\")\n  )\n    .then(response => response.json())\n    .then((data: SimilarResponse) => ({\n      items: data.items\n        .filter(v => v.id.videoId)\n        .map(s => ({\n          ...mapTitle(s.snippet),\n          type: \"Video\",\n          videoId: s.id.videoId,\n          previewUrl: s.snippet.thumbnails.default.url\n        }))\n    }));\n\nexport const getPlaylistVideos = (\n  playlistId: string\n): Promise<SearchResponse> => {\n  logRequest(playlistId, \"playlistItems\");\n  if (IS_REAL_API) {\n    return fetch(\n      `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=${playlistId}&key=${YOUTUBE_KEY}&maxResults=20`\n    )\n      .then(response => response.json())\n      .then((data: PlaylistVideosResponse) => ({\n        items: data.items.map(item => ({\n          ...mapTitle(item.snippet),\n          type: \"Video\",\n          videoId: item.snippet.resourceId.videoId,\n          previewUrl: item.snippet.thumbnails.default.url\n        }))\n      }));\n  }\n  throw new Error(\"Faked playlistItems is not supported yet\");\n};\nexport const getChannelVideos = (\n  channelId: string\n): Promise<SearchResponse> => {\n  logRequest(channelId, \"videos for channel\");\n  if (IS_REAL_API) {\n    return fetch(\n      `https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=${channelId}&key=${YOUTUBE_KEY}&maxResults=20&order=date&type=video`\n    )\n      .then(response => response.json())\n      .then((data: YoutubeSearchResponse) => ({\n        items: data.items.map(parseItem)\n      }));\n  }\n  throw new Error(\"Faked getChannelVideos is not supported yet\");\n};\nexport const getPlaylistsForChannel = (\n  channelId: string\n): Promise<SearchResponse> => {\n  logRequest(channelId, \"playlists for channel\");\n  if (IS_REAL_API) {\n    return fetch(\n      `https://www.googleapis.com/youtube/v3/playlists?part=snippet%2CcontentDetails&channelId=${channelId}&maxResults=25&key=${YOUTUBE_KEY}`\n    )\n      .then(response => response.json())\n      .then((data: any) => ({\n        items: data.items.map((item: any) => ({\n          ...mapTitle(item.snippet),\n          previewUrl: item.snippet.thumbnails.default.url,\n          playlistId: item.id,\n          type: \"Playlist\"\n        }))\n      }));\n  }\n  throw new Error(\"Faked getPlaylistsForChannel is not supported yet\");\n};\n\nconst isItemSupported = (itemKind: ItemKind): boolean =>\n  itemKind === \"youtube#video\" ||\n  itemKind === \"youtube#playlist\" ||\n  itemKind === \"youtube#channel\";\n\nconst parseItem = (item: ItemsItem): SearchItem => {\n  if (item.id.kind === \"youtube#video\") return parseVideo(item);\n  else if (item.id.kind === \"youtube#playlist\") return parsePlaylist(item);\n  else return parseChannel(item);\n};\n\nconst parseVideo = (item: ItemsItem): SearchItem => ({\n  ...mapTitle(item.snippet),\n  previewUrl: item.snippet.thumbnails.default.url,\n  videoId: item.id.videoId as string,\n  type: \"Video\"\n});\n\nconst parsePlaylist = (item: ItemsItem): SearchItem => ({\n  ...mapTitle(item.snippet),\n  previewUrl: item.snippet.thumbnails.default.url,\n  playlistId: item.id.playlistId as string,\n  type: \"Playlist\"\n});\n\nconst parseChannel = (item: ItemsItem): SearchItem => ({\n  ...mapTitle(item.snippet),\n  previewUrl: item.snippet.thumbnails.default.url,\n  channelId: item.id.channelId as string,\n  type: \"Channel\"\n});\n\nconst mapTitle = ({ title }: { title: string }) => ({\n  title: handleTitle(title)\n});\n\nconst handleTitle = (title: string): string =>\n  title.replace(/[^\\x00-\\x7F]/g, \"\");\n\nconst logRequest = (term: string, requestType: string) => {\n  console.log(`Requesting Youtube ${requestType} for ${term}`);\n  return term;\n};\n","import { ItemType, SearchItem, SearchResponse } from \"./api\";\nimport { Node, NodeType } from \"../tree/types\";\nimport { createId } from \"../utils\";\n\nexport const mapVideosToNodes = (response: SearchResponse): Node[] => {\n  return response.items.map(mapItem);\n};\n\nconst mapItem = (item: SearchItem): Node => {\n  return {\n    id: createId(),\n    text: item.title,\n    ...getSpecific(item),\n    imageUrl: item.previewUrl,\n    isHidden: true\n  };\n};\n\nconst getSpecific = (item: SearchItem) => ({\n  type: getNodeType(item.type),\n  videoUrl: (item as any).videoId,\n  channelId: (item as any).channelId,\n  playlistId: (item as any).playlistId\n});\n\n//TODO: Consider not using enums but just simple strings\nconst getNodeType = (type: ItemType): NodeType =>\n  type === \"Video\" ? \"Video\" : type === \"Playlist\" ? \"Playlist\" : \"Channel\";\n","import { Node, Nodes, NodeType } from \"./types\";\nimport React, { KeyboardEvent, useState, Fragment } from \"react\";\nimport { NodeIcons, NodeText } from \"./components\";\nimport { onDeleteNode, onRenameNode } from \"./treeActions\";\n\ninterface Props {\n  node: Node;\n  nodes: Nodes;\n  setNodes: (nodes: Nodes) => void;\n}\n\nconst NodeTitle = ({ nodes, node, setNodes }: Props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [text, setText] = useState();\n\n  const onEdit = () => {\n    setText(node.text);\n    setIsEditing(true);\n  };\n\n  const onKey = (e: KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      endEdit();\n    }\n  };\n\n  const endEdit = () => {\n    setNodes(onRenameNode(nodes, node.id, text));\n    setIsEditing(false);\n  };\n\n  const showType = (nodeType: NodeType) =>\n    nodeType === \"Channel\" || nodeType === \"Playlist\";\n\n  const onDelete = (nodeId: string) => setNodes(onDeleteNode(nodes, nodeId));\n\n  return (\n    <Fragment>\n      {isEditing ? (\n        <input\n          data-testid={\"input-\" + node.id}\n          onBlur={endEdit}\n          autoFocus\n          onKeyPress={onKey}\n          type=\"text\"\n          value={text}\n          onChange={e => setText(e.target.value)}\n        />\n      ) : (\n        <div>\n          {showType(node.type) && (\n            <div style={{ fontSize: 11, color: \"grey\" }}>{node.type}</div>\n          )}\n          <NodeText data-testid={\"title-\" + node.id}>{node.text}</NodeText>\n          {node.isLoading && (\n            <span data-testid={\"loading-\" + node.id}>Loading...</span>\n          )}\n        </div>\n      )}\n      <NodeIcons\n        nodeId={node.id}\n        onEdit={onEdit}\n        onDelete={() => onDelete(node.id)}\n      />\n    </Fragment>\n  );\n};\n\nexport default NodeTitle;\n","import React, { Ref, useImperativeHandle, useRef } from \"react\";\nimport { Node, Nodes, Placement } from \"./types\";\nimport {\n  Arrow,\n  Border,\n  Bullet,\n  NodeContainer,\n  VideoPreview\n} from \"./components\";\nimport { TreeDragSource, TreeDropTarget } from \"./dnd\";\nimport NodeTitle from \"./NodeTitle\";\nimport { TreeProps } from \"./Tree\";\nimport { onSearchDone, onSearchStart, toggleVisibility } from \"./treeActions\";\nimport {\n  searchSimilar,\n  getPlaylistVideos,\n  getChannelVideos,\n  getPlaylistsForChannel\n} from \"../youtube/api\";\nimport { mapVideosToNodes } from \"../youtube/mapVideosToNodes\";\nimport { createPlaylistLoader } from \"./sampleTrees\";\n\nexport interface NodeProps extends TreeProps {\n  children: JSX.Element;\n  level: number;\n  node: Node;\n  setNodes: (nodes: Nodes) => void;\n  placement: Placement;\n  setPlacement: (placement: Partial<Placement>) => void;\n  onPlay: (nodeId: Node) => void;\n  connectDragSource: any;\n  connectDropTarget: any;\n}\n\nconst NodeElement = React.forwardRef(\n  (\n    {\n      children,\n      node,\n      level,\n      connectDragSource,\n      connectDropTarget,\n      placement,\n      onPlay,\n      setNodes,\n      nodes\n    }: NodeProps,\n    ref: Ref<HTMLDivElement>\n  ) => {\n    const elementRef = useRef<HTMLDivElement>(null);\n\n    // @ts-ignore\n    useImperativeHandle(ref, () => {\n      connectDropTarget(elementRef);\n      return {\n        getNode: () => elementRef.current\n      };\n    });\n\n    const addPlaylistsLoader = (nodes: Node[], channelId: string): Node[] =>\n      [createPlaylistLoader(channelId)].concat(nodes);\n\n    const onToggleCollapse = (id: string) => {\n      const children = nodes[id].children;\n      if (children && children.length > 0) {\n        setNodes(toggleVisibility(nodes, id));\n      } else if (nodes[id].type === \"Video\") {\n        setNodes(onSearchStart(nodes, id));\n        searchSimilar(nodes[id].videoUrl as string).then(response => {\n          setNodes(onSearchDone(nodes, id, mapVideosToNodes(response)));\n        });\n      } else if (nodes[id].type === \"Playlist\") {\n        setNodes(onSearchStart(nodes, id));\n        getPlaylistVideos(nodes[id].playlistId as string).then(response =>\n          setNodes(onSearchDone(nodes, id, mapVideosToNodes(response)))\n        );\n      } else if (nodes[id].type === \"Channel\") {\n        const channelId = nodes[id].channelId as string;\n        setNodes(onSearchStart(nodes, id));\n        getChannelVideos(channelId).then(response =>\n          setNodes(\n            onSearchDone(\n              nodes,\n              id,\n              addPlaylistsLoader(mapVideosToNodes(response), channelId)\n            )\n          )\n        );\n      } else {\n        const loader = nodes[id].loader;\n        if (loader) {\n          if (loader.type === \"Playlists\") {\n            setNodes(onSearchStart(nodes, id));\n            getPlaylistsForChannel(loader.channelId as string).then(response =>\n              setNodes(onSearchDone(nodes, id, mapVideosToNodes(response)))\n            );\n          } else {\n            throw new Error(\"Unexpected loader: \" + loader.type);\n          }\n        } else {\n          setNodes(toggleVisibility(nodes, id));\n        }\n      }\n    };\n\n    return (\n      <div>\n        <NodeContainer\n          data-testid={\"node-\" + node.id}\n          level={level}\n          ref={elementRef}\n        >\n          <Arrow\n            orientation={node.isHidden ? \"right\" : \"down\"}\n            nodeId={node.id}\n            onClick={() => onToggleCollapse(node.id)}\n          />\n          {node.type !== \"Composite\" ? (\n            <VideoPreview\n              type={node.type}\n              alt=\"Cover image\"\n              onClick={() => onPlay(node)}\n              ref={connectDragSource}\n              src={node.imageUrl}\n              data-testid={`video-image-${node.id}`}\n            />\n          ) : (\n            <Bullet node={node} ref={connectDragSource} />\n          )}\n          <NodeTitle setNodes={setNodes} nodes={nodes} node={node} />\n          {node.id === placement.id && (\n            <Border\n              placement={placement}\n              level={level}\n              data-testid={\"border-\" + node.id}\n            />\n          )}\n        </NodeContainer>\n        {children}\n      </div>\n    );\n  }\n);\n\nexport default TreeDropTarget(TreeDragSource(NodeElement));\n","import React, { Fragment } from \"react\";\nimport { Node, Nodes, Placement } from \"./types\";\nimport NodeElement from \"./Node\";\nimport {getParentKey} from \"./treeOperations\";\n\nexport interface TreeProps {\n  ids: string[];\n  level: number;\n  nodes: Nodes;\n  setNodes: (nodes: Nodes) => void;\n  placement: Partial<Placement>;\n  setPlacement: (placement: Partial<Placement>) => void;\n  onPlay: (node: Node) => void;\n}\n\nconst Tree = (props: TreeProps) => {\n  const { nodes, ids, level } = props;\n  validateChildren(nodes, ids);\n  return (\n    <Fragment>\n      {ids.map(id => (\n        <NodeElement {...props} key={id} node={nodes[id]} level={level}>\n          {hasChildren(nodes[id]) && (\n            <Tree\n              {...props}\n              ids={nodes[id].children as string[]}\n              level={level + 1}\n            />\n          )}\n        </NodeElement>\n      ))}\n    </Fragment>\n  );\n};\n\n//check that all node children can be found in the Nodes tree\nconst validateChildren = (nodes: Nodes, children: string[]) => {\n  children.forEach(node => {\n    if (!nodes[node]) {\n      const parent = getParentKey(nodes, node);\n      throw new Error(\n        `Node '${parent}' contains a non-existing child '${node}'. Check children of '${parent}'`\n      );\n    }\n  });\n};\n\nconst hasChildren = (node: Node) => node.children && !node.isHidden;\n\nexport default Tree;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { DragContext } from \"./tree/dnd\";\nimport { sampleNodes } from \"./tree/sampleTrees\";\nimport { Node, Nodes, Placement, Roots } from \"./tree/types\";\nimport Player from \"./player\";\nimport { searchVideos, SearchResponse } from \"./youtube/api\";\nimport { shallowEqual, useDebounce } from \"./utils\";\nimport { onCreateNode, onSearchDone } from \"./tree/treeActions\";\nimport { mapVideosToNodes } from \"./youtube/mapVideosToNodes\";\nimport Tree from \"./tree/Tree\";\n\ninterface Props {\n  processDefaultNodes?: (nodes: Nodes) => Nodes;\n}\n\nconst STORAGE_KEY = \"nodes:v0.1\";\n\nconst App: React.FC<Props> = ({ processDefaultNodes }) => {\n  const [nodes, setNodes] = useState(\n    processDefaultNodes ? processDefaultNodes(sampleNodes) : sampleNodes\n  );\n  const updateNodes = (nodes: Nodes) => {\n    setNodes(nodes);\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify(nodes));\n  };\n\n  useEffect(() => {\n    const res = window.localStorage.getItem(STORAGE_KEY);\n    if (res) {\n      setNodes(JSON.parse(res));\n    }\n  }, []);\n\n  const [placement, setPlacement] = useState({} as Partial<Placement>);\n\n  const [nodeBeingPlayed, setNodeBeingPlayer] = useState({} as Node);\n\n  const onPlay = (node: Node) => setNodeBeingPlayer(node);\n\n  const setSearchNodes = (response: SearchResponse) => {\n    updateNodes(onSearchDone(nodes, Roots.SEARCH, mapVideosToNodes(response)));\n  };\n\n  const updatePlacementOptimized = (newPlacement: Partial<Placement>) => {\n    if (!shallowEqual(newPlacement, placement)) {\n      console.count(\"called set placement\");\n      setPlacement(newPlacement);\n    }\n  };\n\n  const addNewNodeForFavorites = () =>\n    updateNodes(onCreateNode(nodes, Roots.FAVORITES));\n\n\n\n  return (\n    <div>\n      <DragContext>\n        <LayoutManager\n          onSearchDone={setSearchNodes}\n          renderRight={() => (\n            <Fragment>\n              <Tree\n                nodes={nodes}\n                ids={nodes[Roots.FAVORITES].children as string[]}\n                level={0}\n                setPlacement={updatePlacementOptimized}\n                setNodes={updateNodes}\n                onPlay={onPlay}\n                placement={placement}\n              />\n              <button\n                data-testid=\"add-new-node\"\n                onClick={addNewNodeForFavorites}\n              >\n                add\n              </button>\n            </Fragment>\n          )}\n          renderLeft={() => (\n            <Tree\n              nodes={nodes}\n              ids={nodes[Roots.SEARCH].children as string[]}\n              level={0}\n              onPlay={onPlay}\n              setPlacement={updatePlacementOptimized}\n              setNodes={updateNodes}\n              placement={placement}\n            />\n          )}\n        />\n      </DragContext>\n      <Player videoId={nodeBeingPlayed.videoUrl} />\n    </div>\n  );\n};\n\nconst LayoutManager = ({ renderRight, renderLeft, onSearchDone }: any) => {\n  const [seachVisible, setSearchVisibility] = useState(false);\n  const style = seachVisible\n    ? { flex: 1 }\n    : { width: 40, backgroundColor: \"lightGrey\" };\n  return (\n    <div\n      style={{\n        flexDirection: \"row\",\n        display: \"flex\",\n        alignItems: \"stretch\",\n        height: \"100vh\"\n      }}\n    >\n      <div style={style} data-testid=\"search-zone\">\n        <Search\n          isVisible={seachVisible}\n          onSearchDone={onSearchDone}\n          onClick={() => setSearchVisibility(!seachVisible)}\n          renderTree={renderLeft}\n        />\n      </div>\n\n      <div style={{ flex: 1 }} data-testid=\"favorites-zone\">\n        {renderRight()}\n      </div>\n    </div>\n  );\n};\n\nconst Search = ({ isVisible, onClick, renderTree, onSearchDone }: any) => {\n  const [value, setValue] = useState(\"\");\n  const throttledValue = useDebounce(value, 500);\n  useEffect(() => {\n    if (throttledValue) searchVideos(throttledValue).then(onSearchDone);\n  }, [throttledValue]);\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: isVisible ? \"flex-end\" : \"center\",\n          paddingRight: isVisible ? 20 : 0\n        }}\n      >\n        <button data-testid=\"toggle-sidebar\" onClick={onClick}>\n          {isVisible ? \"<\" : \"+\"}\n        </button>\n      </div>\n      {isVisible && (\n        <input\n          data-testid=\"search-input\"\n          type=\"text\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n      )}\n      {isVisible && renderTree()}\n    </div>\n  );\n};\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport function useDebounce(value: any, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","export function shallowEqual(objA: any, objB: any) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/folder-closed-withItems.64114435.svg\";","module.exports = __webpack_public_path__ + \"static/media/folder-closed-loader.d552820a.svg\";","module.exports = __webpack_public_path__ + \"static/media/folder-closed-empty.5f8d5aa0.svg\";","module.exports = __webpack_public_path__ + \"static/media/folder-opened-many.f8af0c07.svg\";","module.exports = __webpack_public_path__ + \"static/media/folder-opened-single.cfca5246.svg\";","module.exports = __webpack_public_path__ + \"static/media/folder-opened-empty.feffd839.svg\";"],"sourceRoot":""}